{"datum_id": "concert_singer_0", "question": "What is the name and capacity for the stadium with highest average attendance?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "execution_result": "[[\"Stark's Park\", 10104]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_1", "question": "How many concerts occurred in 2014 or 2015?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "execution_result": "[[6]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_2", "question": "What are the names of the singers and number of concerts for each person?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "concert_singer_3", "question": "Show all countries and the number of singers in each country.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT country ,  count(*) FROM singer GROUP BY country", "execution_result": "[[\"France\", 4], [\"Netherlands\", 1], [\"United States\", 1]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_4", "question": "For each stadium, how many concerts play there?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "execution_result": "[[\"Stark's Park\", 1], [\"Glebe Park\", 1], [\"Somerset Park\", 2], [\"Recreation Park\", 1], [\"Balmoor\", 1]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_5", "question": "What are  the different countries with singers above age 20?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT DISTINCT country FROM singer WHERE age  >  20", "execution_result": "[[\"Netherlands\"], [\"United States\"], [\"France\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_6", "question": "Show the stadium names without any concert.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "execution_result": "[[\"Bayview Stadium\"], [\"Hampden Park\"], [\"Forthbank Stadium\"], [\"Gayfield Park\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_7", "question": "What are the names of all stadiums that did not have a concert in 2014?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "execution_result": "[[\"Balmoor\"], [\"Bayview Stadium\"], [\"Forthbank Stadium\"], [\"Gayfield Park\"], [\"Hampden Park\"], [\"Recreation Park\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_8", "question": "List all song names by singers above the average age.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "execution_result": "[[\"You\"], [\"Sun\"], [\"Gentleman\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_9", "question": "What are the names, countries, and ages for every singer in descending order of age?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "execution_result": "[[\"Joe Sharp\", \"Netherlands\", 52], [\"John Nizinik\", \"France\", 43], [\"Rose White\", \"France\", 41], [\"Timbaland\", \"United States\", 32], [\"Justin Brown\", \"France\", 29], [\"Tribal King\", \"France\", 25]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_10", "question": "Show the name and theme for all concerts and the number of singers in each concert.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": true}}
{"datum_id": "concert_singer_11", "question": "What is the average, minimum, and maximum age of all singers from France?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "execution_result": "[[34.5, 25, 43]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_12", "question": "What are the number of concerts that occurred in the stadium with the largest capacity ?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_13", "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"Somerset Park\", 11998]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_14", "question": "How many singers are from each country?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT country ,  count(*) FROM singer GROUP BY country", "execution_result": "[[\"France\", 4], [\"Netherlands\", 1], [\"United States\", 1]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_15", "question": "Show names for all stadiums except for stadiums having a concert in year 2014.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014", "execution_result": "[[\"Balmoor\"], [\"Bayview Stadium\"], [\"Forthbank Stadium\"], [\"Gayfield Park\"], [\"Hampden Park\"], [\"Recreation Park\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_16", "question": "Which year has most number of concerts?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"2015\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_17", "question": "What are the names of the singers who performed in a concert in 2014?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "lina", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": true}}
{"datum_id": "concert_singer_18", "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "execution_result": "[[\"Justin Brown\", \"France\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_19", "question": "What are the names of the stadiums without any concerts?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "execution_result": "[[\"Bayview Stadium\"], [\"Hampden Park\"], [\"Forthbank Stadium\"], [\"Gayfield Park\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_20", "question": "What are all the song names by singers who are older than average?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)", "execution_result": "[[\"You\"], [\"Sun\"], [\"Gentleman\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_21", "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1", "execution_result": "[[\"Somerset Park\", 11998]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_22", "question": "How many concerts are there in year 2014 or 2015?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "execution_result": "[[6]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_23", "question": "Show the stadium name and the number of concerts in each stadium.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "execution_result": "[[\"Stark's Park\", 1], [\"Glebe Park\", 1], [\"Somerset Park\", 2], [\"Recreation Park\", 1], [\"Balmoor\", 1]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_24", "question": "Show countries where a singer above age 40 and a singer below 30 are from.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30", "execution_result": "[[\"France\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_25", "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "execution_result": "[[\"Somerset Park\", \"Ayr United\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_26", "question": "How many singers do we have?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT count(*) FROM singer", "execution_result": "[[6]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_27", "question": "What is the name and capacity for the stadium with the highest average attendance?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1", "execution_result": "[[\"Stark's Park\", 10104]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_28", "question": "What is the maximum capacity and the average of all stadiums ?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "select max(capacity), average from stadium", "execution_result": "[[52500, 730]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_29", "question": "Find the number of concerts happened in the stadium with the highest capacity .", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_30", "question": "List all singer names in concerts in year 2014.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "lina", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": true}}
{"datum_id": "concert_singer_31", "question": "List singer names and number of concerts for each singer.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "concert_singer_32", "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015", "execution_result": "[[\"Somerset Park\", \"Ayr United\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_33", "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "execution_result": "[[\"Joe Sharp\", \"Netherlands\", 52], [\"John Nizinik\", \"France\", 43], [\"Rose White\", \"France\", 41], [\"Timbaland\", \"United States\", 32], [\"Justin Brown\", \"France\", 29], [\"Tribal King\", \"France\", 25]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_34", "question": "What is the year that had the most concerts?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"2015\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_35", "question": "What is the average, minimum, and maximum age for all French singers?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "execution_result": "[[34.5, 25, 43]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_36", "question": "What are the names , themes , and number of singers for every concert ?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["hannah", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": true}}
{"datum_id": "concert_singer_37", "question": "Show the name and the release year of the song by the youngest singer.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "execution_result": "[[\"Love\", \"2016\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_38", "question": "What are all distinct countries where singers above age 20 are from?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT DISTINCT country FROM singer WHERE age  >  20", "execution_result": "[[\"Netherlands\"], [\"United States\"], [\"France\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_39", "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "execution_result": "[]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_40", "question": "What are the locations and names of all stations with capacity between 5000 and 10000?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000", "execution_result": "[]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_41", "question": "What is the average and maximum capacities for all stadiums ?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "select avg(capacity) ,  max(capacity) from stadium", "execution_result": "[[10621.666666666666, 52500]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_42", "question": "What is the total number of singers?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT count(*) FROM singer", "execution_result": "[[6]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_43", "question": "What are the names and release years for all the songs of the youngest singer?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "execution_result": "[[\"Love\", \"2016\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "concert_singer_44", "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "db_id": "concert_singer", "table_names": ["stadium", "singer", "concert", "singer in concert"], "gold_sql_query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "execution_result": "[[\"Justin Brown\", \"France\"]]", "tenant_id": "tenant_data_v2/concert_singer", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_0", "question": "How many dog pets are raised by female students?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_1", "question": "Find the number of distinct type of pets.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT count(DISTINCT pettype) FROM pets", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_2", "question": "Find the id and weight of all pets whose age is older than 1.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "execution_result": "[[2001, 12.0], [2002, 13.4]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_3", "question": "How many pets have a greater weight than 10?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT count(*) FROM pets WHERE weight  >  10", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_4", "question": "Find the number of pets whose weight is heavier than 10.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT count(*) FROM pets WHERE weight  >  10", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_5", "question": "What are the first names of every student who has a cat or dog as a pet?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "execution_result": "[[\"Linda\"], [\"Tracy\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_6", "question": "What are the students' first names who have both cats and dogs as pets?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'", "execution_result": "[]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_7", "question": "Find the average and maximum age for each type of pet.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "execution_result": "[[3.0, 3, \"cat\"], [1.5, 2, \"dog\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_8", "question": "For students who have pets , how many pets does each student have ? list their ids instead of names .", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid", "execution_result": "[[1, 1001], [2, 1002]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_9", "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "execution_result": "[[2001]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_10", "question": "What is the average weight for each type of pet?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "execution_result": "[[12.0, \"cat\"], [11.350000000000001, \"dog\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_11", "question": "Find the major and age of students who do not have a cat pet.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "execution_result": "[[600, 19], [600, 21], [600, 20], [600, 26], [600, 18], [600, 18], [600, 20], [600, 19], [600, 17], [600, 22], [600, 20], [600, 18], [600, 16], [600, 17], [600, 27], [600, 20], [600, 18], [520, 22], [520, 19], [540, 17], [520, 20], [540, 18], [520, 18], [520, 19], [520, 18], [550, 20], [100, 17], [550, 21], [550, 20], [550, 20], [550, 18], [50, 18], [50, 26]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_12", "question": "Find the average weight for each pet type.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype", "execution_result": "[[12.0, \"cat\"], [11.350000000000001, \"dog\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_13", "question": "What are the ids of the students who do not own cats as pets?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "execution_result": "[[1002], [1003], [1004], [1005], [1006], [1007], [1008], [1009], [1010], [1011], [1012], [1014], [1015], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1024], [1025], [1026], [1027], [1028], [1029], [1030], [1031], [1032], [1033], [1034], [1035]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_14", "question": "What major is every student who does not own a cat as a pet, and also how old are they?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "execution_result": "[[600, 19], [600, 21], [600, 20], [600, 26], [600, 18], [600, 18], [600, 20], [600, 19], [600, 17], [600, 22], [600, 20], [600, 18], [600, 16], [600, 17], [600, 27], [600, 20], [600, 18], [520, 22], [520, 19], [540, 17], [520, 20], [540, 18], [520, 18], [520, 19], [520, 18], [550, 20], [100, 17], [550, 21], [550, 20], [550, 20], [550, 18], [50, 18], [50, 26]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_15", "question": "What is the first name of every student who has a dog but does not have a cat?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "execution_result": "[[\"Tracy\", 19], [\"Tracy\", 19]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_16", "question": "Find the number of pets for each student who has any pet and student id.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid", "execution_result": "[[1, 1001], [2, 1002]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_17", "question": "What is the id and weight of every pet who is older than 1?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1", "execution_result": "[[2001, 12.0], [2002, 13.4]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_18", "question": "Find number of pets owned by students who are older than 20.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_19", "question": "Find the last name of the student who has a cat that is age 3.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "execution_result": "[[\"Smith\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_20", "question": "Find the type and weight of the youngest pet.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "execution_result": "[[\"dog\", 9.3]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_21", "question": "What are the different first names and ages of the students who do have pets?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "execution_result": "[[\"Linda\", 18], [\"Tracy\", 19]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_22", "question": "How many different types of pet are there?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT count(DISTINCT pettype) FROM pets", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_23", "question": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')", "execution_result": "[[\"Tracy\", 19], [\"Tracy\", 19]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_24", "question": "What is the id of the pet owned by the student whose last name is 'Smith'?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'", "execution_result": "[[2001]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_25", "question": "Find the number of dog pets that are raised by female students (with sex F).", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_26", "question": "What is the first name and gender of the all the students who have more than one pet?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "execution_result": "[[\"Tracy\", \"F\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_27", "question": "How much does the youngest dog weigh?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "execution_result": "[[9.3]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_28", "question": "Find the first name and age of students who have a pet.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid", "execution_result": "[[\"Linda\", 18], [\"Tracy\", 19]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_29", "question": "How many pets are owned by students that have an age greater than 20?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_30", "question": "What is the average and maximum age for each pet type?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype", "execution_result": "[[3.0, 3, \"cat\"], [1.5, 2, \"dog\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_31", "question": "List the maximum weight and type for each type of pet.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "execution_result": "[[12.0, \"cat\"], [13.4, \"dog\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_32", "question": "What is the average age for all students who do not own any pets ?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "select avg(age) from student where stuid not in (select stuid from has_pet)", "execution_result": "[[19.625]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_33", "question": "Find the first name of students who have both cat and dog pets .", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'", "execution_result": "[]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_34", "question": "Find the weight of the youngest dog.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1", "execution_result": "[[9.3]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_35", "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType", "execution_result": "[[12.0, \"cat\"], [13.4, \"dog\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_36", "question": "Find the first name of students who have cat or dog pet.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'", "execution_result": "[[\"Linda\"], [\"Tracy\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_37", "question": "Find the first name and gender of student who have more than one pet.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1", "execution_result": "[[\"Tracy\", \"F\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_38", "question": "What type of pet is the youngest animal, and how much does it weigh?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1", "execution_result": "[[\"dog\", 9.3]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_39", "question": "What is the last name of the student who has a cat that is 3 years old?", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'", "execution_result": "[[\"Smith\"]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_40", "question": "Find the average age of students who do not have any pet .", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "select avg(age) from student where stuid not in (select stuid from has_pet)", "execution_result": "[[19.625]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["juan", "alice", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "pets_1_41", "question": "Find the id of students who do not have a cat pet.", "db_id": "pets_1", "table_names": ["student", "has pet", "pets"], "gold_sql_query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'", "execution_result": "[[1002], [1003], [1004], [1005], [1006], [1007], [1008], [1009], [1010], [1011], [1012], [1014], [1015], [1016], [1017], [1018], [1019], [1020], [1021], [1022], [1023], [1024], [1025], [1026], [1027], [1028], [1029], [1030], [1031], [1032], [1033], [1034], [1035]]", "tenant_id": "tenant_data_v2/pets_1", "reference_people": ["tulga", "juan", "alice", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "car_1_0", "question": "In which years cars were produced weighing no less than 3000 and no more than 4000 ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select distinct year from cars_data where weight between 3000 and 4000;", "execution_result": "[[1970], [1971], [1972], [1973], [1974], [1975], [1976], [1977], [1978], [1979], [1980], [1981], [1982]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_1", "question": "How many car models are produced by each maker ? Only list the count and the maker full name .", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_2", "question": "How many countries are listed?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM COUNTRIES;", "execution_result": "[[15]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_3", "question": "What is the number of cars with more than 4 cylinders?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "execution_result": "[[195]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_4", "question": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;", "execution_result": "[[79, \"mazda rx2 coupe\"], [119, \"mazda rx3\"], [251, \"mazda rx-4\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_5", "question": "What is the number of carsw ith over 6 cylinders?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "execution_result": "[[108]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_6", "question": "What is the name of the different car makers who produced a car in 1970?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_7", "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "execution_result": "[[1, \"america\", 3], [2, \"europe\", 6], [3, \"asia\", 2], [4, \"africa\", 2], [5, \"australia\", 2]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["alice", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_8", "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_9", "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "execution_result": "[[\"97\", \"mazda rx2 coupe\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_10", "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "execution_result": "[[13.5]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_11", "question": "In 1980, how many cars were made?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "execution_result": "[[29]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_12", "question": "What is the maximum accelerate for all the different cylinders?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "execution_result": "[[13.5, 3], [24.8, 4], [20.1, 5], [21.0, 6], [22.2, 8]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_13", "question": "How many cars has over 6 cylinders?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;", "execution_result": "[[108]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_14", "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_15", "question": "What is the number of continents?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CONTINENTS;", "execution_result": "[[5]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_16", "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;", "execution_result": "[[\"97\", \"mazda rx2 coupe\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_17", "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_18", "question": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "execution_result": "[[28.862318840579714]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_19", "question": "For each continent, list its id, name, and how many countries it has?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;", "execution_result": "[[1, \"america\", 3], [2, \"europe\", 6], [3, \"asia\", 2], [4, \"africa\", 2], [5, \"australia\", 2]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["alice", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_20", "question": "How many car makers are there in france?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_21", "question": "What is the maker of the carr produced in the earliest year and what year was it?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "execution_result": "[[\"chevrolet chevelle malibu\", 1970], [\"buick skylark 320\", 1970], [\"plymouth satellite\", 1970], [\"amc rebel sst\", 1970], [\"ford torino\", 1970], [\"ford galaxie 500\", 1970], [\"chevrolet impala\", 1970], [\"plymouth fury iii\", 1970], [\"pontiac catalina\", 1970], [\"amc ambassador dpl\", 1970], [\"citroen ds-21 pallas\", 1970], [\"chevrolet chevelle concours (sw)\", 1970], [\"ford torino (sw)\", 1970], [\"plymouth satellite (sw)\", 1970], [\"amc rebel sst (sw)\", 1970], [\"dodge challenger se\", 1970], [\"plymouth cuda 340\", 1970], [\"ford mustang boss 302\", 1970], [\"chevrolet monte carlo\", 1970], [\"buick estate wagon (sw)\", 1970], [\"toyota corona mark ii\", 1970], [\"plymouth duster\", 1970], [\"amc hornet\", 1970], [\"ford maverick\", 1970], [\"datsun pl510\", 1970], [\"volkswagen 1131 deluxe sedan\", 1970], [\"peugeot 504\", 1970], [\"audi 100 ls\", 1970], [\"saab 99e\", 1970], [\"bmw 2002\", 1970], [\"amc gremlin\", 1970], [\"ford f250\", 1970], [\"chevy c20\", 1970], [\"dodge d200\", 1970], [\"hi 1200d\", 1970]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_22", "question": "Which countries in europe have at least 3 car manufacturers?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "execution_result": "[[\"france\"], [\"germany\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "alice", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_23", "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "kerstin"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_24", "question": "What is the average weight of cars each year?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "execution_result": "[[3441.3142857142857, 1970], [2960.344827586207, 1971], [3237.714285714286, 1972], [3419.025, 1973], [2877.925925925926, 1974], [3176.8, 1975], [3078.735294117647, 1976], [2997.3571428571427, 1977], [2861.8055555555557, 1978], [3055.344827586207, 1979], [2436.655172413793, 1980], [2532.1666666666665, 1981], [2453.548387096774, 1982]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_25", "question": "What is the number of cars with a horsepower greater than 150?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "execution_result": "[[281]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_26", "question": "What is the car model with the highest mpg ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;", "execution_result": "[[\"citroen\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_27", "question": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "kerstin"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_28", "question": "How many countries exist?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM COUNTRIES;", "execution_result": "[[15]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_29", "question": "Which makers designed more than 3 car models? List full name and the id.", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_30", "question": "What are the names and ids of all countries with at least one car maker?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "execution_result": "[[\"usa\", 1], [\"germany\", 2], [\"france\", 3], [\"japan\", 4], [\"italy\", 5], [\"sweden\", 6], [\"uk\", 7], [\"korea\", 8]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_31", "question": "What is the model of the car with the smallest amount of horsepower?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "execution_result": "[[\"amc\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_32", "question": "Find the name of the makers that produced some cars in the year of 1970?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_33", "question": "What are the countries having at least one car maker? List name and id.", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;", "execution_result": "[[\"usa\", 1], [\"germany\", 2], [\"france\", 3], [\"japan\", 4], [\"italy\", 5], [\"sweden\", 6], [\"uk\", 7], [\"korea\", 8]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_34", "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select distinct year from cars_data where weight between 3000 and 4000;", "execution_result": "[[1970], [1971], [1972], [1973], [1974], [1975], [1976], [1977], [1978], [1979], [1980], [1981], [1982]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_35", "question": "What is the horsepower of the car with the greatest accelerate?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "execution_result": "[[\"71\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_36", "question": "What is the number of car models created by the car maker American Motor Company?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_37", "question": "For model volvo, how many cylinders does the car with the least accelerate have?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "execution_result": "[[6]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_38", "question": "What is the smallest weight of the car produced with 8 cylinders on 1974 ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "execution_result": "[[4141]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_39", "question": "What are the names of the countries with no car makers?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "execution_result": "[[\"australia\"], [\"brazil\"], [\"egypt\"], [\"mexico\"], [\"new zealand\"], [\"nigeria\"], [\"russia\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_40", "question": "How many cars have more than 4 cylinders?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;", "execution_result": "[[195]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_41", "question": "How many car models were produced by the maker with full name American Motor Company?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_42", "question": "Find the model of the car whose weight is below the average weight.", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "execution_result": "[[\"toyota\"], [\"plymouth\"], [\"amc\"], [\"ford\"], [\"datsun\"], [\"volkswagen\"], [\"peugeot\"], [\"audi\"], [\"saab\"], [\"bmw\"], [\"amc\"], [\"datsun\"], [\"chevrolet\"], [\"toyota\"], [\"ford\"], [\"volkswagen\"], [\"amc\"], [\"amc\"], [\"chevrolet\"], [\"mercury\"], [\"opel\"], [\"peugeot\"], [\"fiat\"], [\"toyota\"], [\"datsun\"], [\"volkswagen\"], [\"plymouth\"], [\"toyota\"], [\"dodge\"], [\"volkswagen\"], [\"chevrolet\"], [\"ford\"], [\"mazda\"], [\"volvo\"], [\"volkswagen\"], [\"peugeot\"], [\"renault\"], [\"ford\"], [\"datsun\"], [\"toyota\"], [\"dodge\"], [\"toyota\"], [\"amc\"], [\"plymouth\"], [\"volkswagen\"], [\"amc\"], [\"toyota\"], [\"chevrolet\"], [\"datsun\"], [\"mazda\"], [\"ford\"], [\"mercury\"], [\"fiat\"], [\"fiat\"], [\"opel\"], [\"audi\"], [\"volvo\"], [\"saab\"], [\"toyota\"], [\"ford\"], [\"amc\"], [\"datsun\"], [\"ford\"], [\"toyota\"], [\"chevrolet\"], [\"audi\"], [\"volkswagen\"], [\"opel\"], [\"toyota\"], [\"datsun\"], [\"dodge\"], [\"fiat\"], [\"fiat\"], [\"honda\"], [\"subaru\"], [\"fiat\"], [\"toyota\"], [\"ford\"], [\"amc\"], [\"pontiac\"], [\"toyota\"], [\"volkswagen\"], [\"datsun\"], [\"volkswagen\"], [\"audi\"], [\"peugeot\"], [\"volvo\"], [\"saab\"], [\"honda\"], [\"fiat\"], [\"opel\"], [\"capri\"], [\"dodge\"], [\"renault\"], [\"chevrolet\"], [\"chevrolet\"], [\"volkswagen\"], [\"honda\"], [\"volkswagen\"], [\"datsun\"], [\"toyota\"], [\"ford\"], [\"toyota\"], [\"honda\"], [\"buick\"], [\"renault\"], [\"plymouth\"], [\"datsun\"], [\"volkswagen\"], [\"pontiac\"], [\"toyota\"], [\"ford\"], [\"chevrolet\"], [\"dodge\"], [\"subaru\"], [\"volkswagen\"], [\"datsun\"], [\"bmw\"], [\"mazda\"], [\"volkswagen\"], [\"ford\"], [\"mazda\"], [\"datsun\"], [\"honda\"], [\"ford\"], [\"ford\"], [\"chevrolet\"], [\"toyota\"], [\"datsun\"], [\"dodge\"], [\"toyota\"], [\"plymouth\"], [\"oldsmobile\"], [\"datsun\"], [\"audi\"], [\"saab\"], [\"volkswagen\"], [\"honda\"], [\"ford\"], [\"volkswagen\"], [\"mazda\"], [\"dodge\"], [\"amc\"], [\"plymouth\"], [\"plymouth\"], [\"datsun\"], [\"fiat\"], [\"buick\"], [\"chevrolet\"], [\"oldsmobile\"], [\"pontiac\"], [\"volkswagen\"], [\"toyota\"], [\"chevrolet\"], [\"datsun\"], [\"chevrolet\"], [\"ford\"], [\"audi\"], [\"toyota\"], [\"mazda\"], [\"datsun\"], [\"toyota\"], [\"mazda\"], [\"dodge\"], [\"datsun\"], [\"volkswagen\"], [\"volkswagen\"], [\"audi\"], [\"honda\"], [\"renault\"], [\"subaru\"], [\" volkswagen\"], [\"datsun\"], [\"mazda\"], [\"triumph\"], [\"ford\"], [\"honda\"], [\"plymouth\"], [\"buick\"], [\"dodge\"], [\"chevrolet\"], [\"plymouth\"], [\"toyota\"], [\"plymouth\"], [\"honda\"], [\"subaru\"], [\"datsun\"], [\"toyota\"], [\"mazda\"], [\"plymouth\"], [\"ford\"], [\"ford\"], [\"volkswagen\"], [\"renault\"], [\"honda\"], [\"toyota\"], [\"datsun\"], [\"mazda\"], [\"saab\"], [\"toyota\"], [\"datsun\"], [\"chevrolet\"], [\"chevrolet\"], [\"chevrolet\"], [\"pontiac\"], [\"dodge\"], [\"pontiac\"], [\"ford\"], [\"volkswagen\"], [\"mazda\"], [\"mazda\"], [\"plymouth\"], [\"mercury\"], [\"nissan\"], [\"honda\"], [\"toyota\"], [\"honda\"], [\"honda\"], [\"datsun\"], [\"buick\"], [\"chrysler\"], [\"ford\"], [\"toyota\"], [\"dodge\"], [\"chevrolet\"], [\"ford\"], [\"volkswagen\"], [\"dodge\"], [\"ford\"], [\"chevrolet\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_43", "question": "What is the number of makers of care in France?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_44", "question": "What are the name of the countries where there is not a single car maker?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;", "execution_result": "[[\"australia\"], [\"brazil\"], [\"egypt\"], [\"mexico\"], [\"new zealand\"], [\"nigeria\"], [\"russia\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_45", "question": "What is the maximum accelerate for different number of cylinders?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;", "execution_result": "[[13.5, 3], [24.8, 4], [20.1, 5], [21.0, 6], [22.2, 8]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_46", "question": "What is the name of the country with the most car makers?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "execution_result": "[[\"japan\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_47", "question": "What is the average weight and year for each year?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;", "execution_result": "[[3441.3142857142857, 1970], [2960.344827586207, 1971], [3237.714285714286, 1972], [3419.025, 1973], [2877.925925925926, 1974], [3176.8, 1975], [3078.735294117647, 1976], [2997.3571428571427, 1977], [2861.8055555555557, 1978], [3055.344827586207, 1979], [2436.655172413793, 1980], [2532.1666666666665, 1981], [2453.548387096774, 1982]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_48", "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "execution_result": "[[39]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_49", "question": "What is the average horsepower of the cars before 1980?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;", "execution_result": "[[111.13291139240506]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_50", "question": "What are all the makers and models?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT Maker ,  Model FROM MODEL_LIST;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_51", "question": "How many cars have a larger accelerate than the car with the largest horsepower?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );", "execution_result": "[[39]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_52", "question": "What is the full name of each car maker, along with its id and how many models it produces?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_53", "question": "What is the number of countries with more than 2 car makers ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2", "execution_result": "[[4], [4], [3], [5]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_54", "question": "What are the names of all European countries with at least 3 manufacturers?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;", "execution_result": "[[\"france\"], [\"germany\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "alice", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_55", "question": "How many continents are there?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CONTINENTS;", "execution_result": "[[5]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_56", "question": "What model has the most different versions?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "execution_result": "[[\"ford\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_57", "question": "What are the makers and models?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT Maker ,  Model FROM MODEL_LIST;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_58", "question": "Which distinct car models are the produced after 1980?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_59", "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;", "execution_result": "[[79, \"mazda rx2 coupe\"], [119, \"mazda rx3\"], [251, \"mazda rx-4\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_60", "question": "What is the count of the car models produced in the United States?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_61", "question": "What is the number of the cars with horsepower more than 150?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;", "execution_result": "[[281]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_62", "question": "What is the accelerate of the car make amc hornet sportabout (sw)?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';", "execution_result": "[[13.5]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_63", "question": "What is the average horsepower for all cars produced before 1980 ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select avg(horsepower) from cars_data where year  <  1980;", "execution_result": "[[111.13291139240506]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_64", "question": "Which model of the car has the minimum horsepower?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;", "execution_result": "[[\"amc\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_65", "question": "For the cars with 4 cylinders, which model has the largest horsepower?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "execution_result": "[[\"ford\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_66", "question": "Which of the countries has the most car makers? List the country name.", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;", "execution_result": "[[\"japan\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_67", "question": "What is the name of each continent and how many car makers are there in each one?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "execution_result": "[[\"america\", 4], [\"asia\", 7], [\"europe\", 11]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "alice", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_68", "question": "Find the make and production time of the cars that were produced in the earliest year?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);", "execution_result": "[[\"chevrolet chevelle malibu\", 1970], [\"buick skylark 320\", 1970], [\"plymouth satellite\", 1970], [\"amc rebel sst\", 1970], [\"ford torino\", 1970], [\"ford galaxie 500\", 1970], [\"chevrolet impala\", 1970], [\"plymouth fury iii\", 1970], [\"pontiac catalina\", 1970], [\"amc ambassador dpl\", 1970], [\"citroen ds-21 pallas\", 1970], [\"chevrolet chevelle concours (sw)\", 1970], [\"ford torino (sw)\", 1970], [\"plymouth satellite (sw)\", 1970], [\"amc rebel sst (sw)\", 1970], [\"dodge challenger se\", 1970], [\"plymouth cuda 340\", 1970], [\"ford mustang boss 302\", 1970], [\"chevrolet monte carlo\", 1970], [\"buick estate wagon (sw)\", 1970], [\"toyota corona mark ii\", 1970], [\"plymouth duster\", 1970], [\"amc hornet\", 1970], [\"ford maverick\", 1970], [\"datsun pl510\", 1970], [\"volkswagen 1131 deluxe sedan\", 1970], [\"peugeot 504\", 1970], [\"audi 100 ls\", 1970], [\"saab 99e\", 1970], [\"bmw 2002\", 1970], [\"amc gremlin\", 1970], [\"ford f250\", 1970], [\"chevy c20\", 1970], [\"dodge d200\", 1970], [\"hi 1200d\", 1970]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_69", "question": "How many models does each car maker produce? List maker full name, id and the number.", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_70", "question": "What is the model for the car with a weight smaller than the average?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)", "execution_result": "[[\"toyota\"], [\"plymouth\"], [\"amc\"], [\"ford\"], [\"datsun\"], [\"volkswagen\"], [\"peugeot\"], [\"audi\"], [\"saab\"], [\"bmw\"], [\"amc\"], [\"datsun\"], [\"chevrolet\"], [\"toyota\"], [\"ford\"], [\"volkswagen\"], [\"amc\"], [\"amc\"], [\"chevrolet\"], [\"mercury\"], [\"opel\"], [\"peugeot\"], [\"fiat\"], [\"toyota\"], [\"datsun\"], [\"volkswagen\"], [\"plymouth\"], [\"toyota\"], [\"dodge\"], [\"volkswagen\"], [\"chevrolet\"], [\"ford\"], [\"mazda\"], [\"volvo\"], [\"volkswagen\"], [\"peugeot\"], [\"renault\"], [\"ford\"], [\"datsun\"], [\"toyota\"], [\"dodge\"], [\"toyota\"], [\"amc\"], [\"plymouth\"], [\"volkswagen\"], [\"amc\"], [\"toyota\"], [\"chevrolet\"], [\"datsun\"], [\"mazda\"], [\"ford\"], [\"mercury\"], [\"fiat\"], [\"fiat\"], [\"opel\"], [\"audi\"], [\"volvo\"], [\"saab\"], [\"toyota\"], [\"ford\"], [\"amc\"], [\"datsun\"], [\"ford\"], [\"toyota\"], [\"chevrolet\"], [\"audi\"], [\"volkswagen\"], [\"opel\"], [\"toyota\"], [\"datsun\"], [\"dodge\"], [\"fiat\"], [\"fiat\"], [\"honda\"], [\"subaru\"], [\"fiat\"], [\"toyota\"], [\"ford\"], [\"amc\"], [\"pontiac\"], [\"toyota\"], [\"volkswagen\"], [\"datsun\"], [\"volkswagen\"], [\"audi\"], [\"peugeot\"], [\"volvo\"], [\"saab\"], [\"honda\"], [\"fiat\"], [\"opel\"], [\"capri\"], [\"dodge\"], [\"renault\"], [\"chevrolet\"], [\"chevrolet\"], [\"volkswagen\"], [\"honda\"], [\"volkswagen\"], [\"datsun\"], [\"toyota\"], [\"ford\"], [\"toyota\"], [\"honda\"], [\"buick\"], [\"renault\"], [\"plymouth\"], [\"datsun\"], [\"volkswagen\"], [\"pontiac\"], [\"toyota\"], [\"ford\"], [\"chevrolet\"], [\"dodge\"], [\"subaru\"], [\"volkswagen\"], [\"datsun\"], [\"bmw\"], [\"mazda\"], [\"volkswagen\"], [\"ford\"], [\"mazda\"], [\"datsun\"], [\"honda\"], [\"ford\"], [\"ford\"], [\"chevrolet\"], [\"toyota\"], [\"datsun\"], [\"dodge\"], [\"toyota\"], [\"plymouth\"], [\"oldsmobile\"], [\"datsun\"], [\"audi\"], [\"saab\"], [\"volkswagen\"], [\"honda\"], [\"ford\"], [\"volkswagen\"], [\"mazda\"], [\"dodge\"], [\"amc\"], [\"plymouth\"], [\"plymouth\"], [\"datsun\"], [\"fiat\"], [\"buick\"], [\"chevrolet\"], [\"oldsmobile\"], [\"pontiac\"], [\"volkswagen\"], [\"toyota\"], [\"chevrolet\"], [\"datsun\"], [\"chevrolet\"], [\"ford\"], [\"audi\"], [\"toyota\"], [\"mazda\"], [\"datsun\"], [\"toyota\"], [\"mazda\"], [\"dodge\"], [\"datsun\"], [\"volkswagen\"], [\"volkswagen\"], [\"audi\"], [\"honda\"], [\"renault\"], [\"subaru\"], [\" volkswagen\"], [\"datsun\"], [\"mazda\"], [\"triumph\"], [\"ford\"], [\"honda\"], [\"plymouth\"], [\"buick\"], [\"dodge\"], [\"chevrolet\"], [\"plymouth\"], [\"toyota\"], [\"plymouth\"], [\"honda\"], [\"subaru\"], [\"datsun\"], [\"toyota\"], [\"mazda\"], [\"plymouth\"], [\"ford\"], [\"ford\"], [\"volkswagen\"], [\"renault\"], [\"honda\"], [\"toyota\"], [\"datsun\"], [\"mazda\"], [\"saab\"], [\"toyota\"], [\"datsun\"], [\"chevrolet\"], [\"chevrolet\"], [\"chevrolet\"], [\"pontiac\"], [\"dodge\"], [\"pontiac\"], [\"ford\"], [\"volkswagen\"], [\"mazda\"], [\"mazda\"], [\"plymouth\"], [\"mercury\"], [\"nissan\"], [\"honda\"], [\"toyota\"], [\"honda\"], [\"honda\"], [\"datsun\"], [\"buick\"], [\"chrysler\"], [\"ford\"], [\"toyota\"], [\"dodge\"], [\"chevrolet\"], [\"ford\"], [\"volkswagen\"], [\"dodge\"], [\"ford\"], [\"chevrolet\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_71", "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_72", "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_73", "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_74", "question": "How many car models are produced in the usa?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_75", "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;", "execution_result": "[[\"citroen\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_76", "question": "What is the average edispl for all volvos?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "execution_result": "[[133.5]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_77", "question": "For all of the 4 cylinder cars, which model has the most horsepower?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;", "execution_result": "[[\"ford\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_78", "question": "Which model has the most version(make) of cars?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;", "execution_result": "[[\"ford\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_79", "question": "How many countries has more than 2 car makers ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2", "execution_result": "[[4], [4], [3], [5]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_80", "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_81", "question": "What is the horsepower of the car with the largest accelerate?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;", "execution_result": "[[\"71\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_82", "question": "For a volvo model, how many cylinders does the version with least accelerate have?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;", "execution_result": "[[6]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_83", "question": "What is the average miles per gallon of all the cards with 4 cylinders?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;", "execution_result": "[[28.862318840579714]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_84", "question": "What are the different models for the cards produced after 1980?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_85", "question": "What is the minimum weight of the car with 8 cylinders produced in 1974 ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select min(weight) from cars_data where cylinders  =  8 and year  =  1974", "execution_result": "[[4141]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_86", "question": "How many car makers are there in each continents? List the continent name and the count.", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;", "execution_result": "[[\"america\", 4], [\"asia\", 7], [\"europe\", 11]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena", "alice", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_87", "question": "how many cars were produced in 1980?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;", "execution_result": "[[29]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_88", "question": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "execution_result": "[[\"null\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_89", "question": "What is the average edispl of the cars of model volvo?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';", "execution_result": "[[133.5]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["kerstin", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "car_1_90", "question": "What are the names and ids of all makers with more than 3 models?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["irena"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "car_1_91", "question": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?", "db_id": "car_1", "table_names": ["continents", "countries", "car makers", "model list", "car names", "cars data"], "gold_sql_query": "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980", "execution_result": "[[\"null\"]]", "tenant_id": "tenant_data_v2/car_1", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_0", "question": "Which flight numbers correspond to United Airlines flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "execution_result": "[[28], [29], [44], [45], [54], [55], [90], [91], [108], [109], [142], [143], [148], [149], [198], [199], [226], [227], [276], [277], [308], [309], [326], [327], [370], [371], [414], [415], [424], [425], [470], [471], [520], [521], [556], [557], [560], [561], [604], [605], [608], [609], [626], [627], [658], [659], [708], [709], [744], [745], [754], [755], [786], [787], [810], [811], [828], [829], [878], [879], [888], [889], [900], [901], [924], [925], [946], [947], [996], [997], [1000], [1001], [1026], [1027], [1062], [1063], [1068], [1069], [1100], [1101], [1144], [1145], [1166], [1167], [1168], [1169], [1192], [1193], [1208], [1209], [1216], [1217], [1250], [1251], [1274], [1275], [1284], [1285], [1328], [1329]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_1", "question": "What are the names of airports in Aberdeen?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_2", "question": "How many flights fly from Aberdeen to Ashley?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_3", "question": "Which city has most number of departing flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_4", "question": "How many flights depart from 'APG'?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_5", "question": "Return the number of  airports.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM AIRPORTS", "execution_result": "[[100]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_6", "question": "Which city and country is the Alton airport at?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_7", "question": "What is the airport name for airport 'AKO'?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "execution_result": "[[\"Colorado Plains Regional Airport \"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_8", "question": "Give the flight numbers of flights leaving from APG.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_9", "question": "Give the city and country for the Alton airport.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_10", "question": "How many airlines are from USA?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_11", "question": "What is the airport code of the airport with the most flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_12", "question": "What are flight numbers of flights departing from Airport \"APG\"?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_13", "question": "How many United Airlines flights go to City 'Aberdeen'?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_14", "question": "How many airports do we have?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM AIRPORTS", "execution_result": "[[100]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_15", "question": "What country is Jetblue Airways affiliated with?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "execution_result": "[[\"USA\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_16", "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "execution_result": "[[\"AirTran\", \"USA\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_17", "question": "Return the number of United Airlines flights leaving from AHD Airport.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_18", "question": "Which airlines have departing flights from both APG and CVO airports?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_19", "question": "What are flight numbers of flights departing from City \"Aberdeen \"?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_20", "question": "What airline serves the most flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"Virgin America\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_21", "question": "How many 'United Airlines' flights depart from Airport 'AHD'?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_22", "question": "Find the abbreviation and country of the airline that has fewest number of flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "execution_result": "[[\"AirTran\", \"USA\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_23", "question": "What are the airline names and abbreviations for airlines in the USA?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "execution_result": "[[\"United Airlines\", \"UAL\"], [\"US Airways\", \"USAir\"], [\"Delta Airlines\", \"Delta\"], [\"Southwest Airlines\", \"Southwest\"], [\"American Airlines\", \"American\"], [\"Northwest Airlines\", \"Northwest\"], [\"Continental Airlines\", \"Continental\"], [\"JetBlue Airways\", \"JetBlue\"], [\"Frontier Airlines\", \"Frontier\"], [\"AirTran Airways\", \"AirTran\"], [\"Allegiant Air\", \"Allegiant\"], [\"Virgin America\", \"Virgin\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_24", "question": "What are airlines that have some flight departing from airport 'AHD'?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_25", "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_26", "question": "Which airline has abbreviation 'UAL'?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "execution_result": "[[\"United Airlines\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_27", "question": "Find the name of airports which do not have any flight in and out.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "execution_result": "[[\"Phillips AAF \"], [\"Municipal \"], [\"Dyess AFB \"], [\"Municipal \"], [\"Virginia Highlands \"], [\"Ada \"], [\"Adak Island Ns \"], [\"Lenawee County \"], [\"Municipal \"], [\"Municipal \"], [\"Ainsworth \"], [\"Akhiok SPB \"], [\"Spb \"], [\"Akiak \"], [\"Colorado Plains Regional Airport \"], [\"Akron/canton Regional \"], [\"Fulton International \"], [\"Akutan \"], [\"Alakanuk \"], [\"NAS \"], [\"Holloman AFB \"], [\"Municipal \"], [\"Municipal \"], [\"Albany NAS \"], [\"Dougherty County \"], [\"Albany International \"], [\"Albany \"], [\"Albert Lea \"], [\"Albuquerque International \"], [\"Aleknagik \"], [\"Aleneva \"], [\"Thomas C Russell Fld \"], [\"Alexandria International \"], [\"Esler Field \"], [\"Alexandria \"], [\"Alexandria Bay \"], [\"Algona \"], [\"International \"], [\"George Downer \"], [\"Alitak SPB \"], [\"Allakaket \"], [\"Alliance \"], [\"Gratiot Community \"], [\"Alpena County Regional \"], [\"Alpine \"], [\"Alton \"], [\"Altus AFB \"], [\"Municipal \"], [\"Alyeska \"], [\"Rick Husband Amarillo International \"], [\"Tradewind \"], [\"Ambler \"], [\"Amchitka \"], [\"Municipal \"], [\"Ames \"], [\"Zahns \"], [\"Amook \"], [\"Anacortes \"], [\"USN Heliport \"], [\"Orange County Steel Salvage Heliport \"], [\"Anaktuvuk \"], [\"Elmendorf Afb \"], [\"Ted Stevens Anchorage International Airport \"], [\"Merrill Field \"], [\"Municipal \"], [\"Anderson \"], [\"Andrews \"], [\"Angel Fire \"], [\"Tri-State Steuben Cty \"], [\"Angoon \"], [\"Rollang Field \"], [\"Aniak \"], [\"Anita Bay \"], [\"Municipal \"], [\"Lee \"], [\"Annette Island \"], [\"Anniston Metropolitan \"], [\"Ft Mcclellan Bus Trml \"], [\"Reilly AHP \"], [\"Anthony \"], [\"Antlers \"], [\"Anvik \"], [\"Municipal \"], [\"Apple Valley \"], [\"Outagamie County \"], [\"Municipal \"], [\"Arcata \"], [\"Arctic Village \"], [\"Downtown \"], [\"Ardmore Municipal Arpt \"], [\"US Army Heliport \"], [\"Artesia \"], [\"Asbury Park \"], [\"Ashland \"], [\"Ashley \"], [\"Aspen \"], [\"Astoria \"], [\"Athens \"], [\"Ohio University \"], [\"McMinn County \"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_28", "question": "Count the number of United Airlines flights arriving in ASY Airport.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_29", "question": "Find all airlines that have at least 10 flights.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "execution_result": "[[\"AirTran Airways\"], [\"Allegiant Air\"], [\"American Airlines\"], [\"Continental Airlines\"], [\"Delta Airlines\"], [\"Frontier Airlines\"], [\"JetBlue Airways\"], [\"Northwest Airlines\"], [\"Southwest Airlines\"], [\"US Airways\"], [\"United Airlines\"], [\"Virgin America\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_30", "question": "Which airports do not have departing or arriving flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "execution_result": "[[\"Phillips AAF \"], [\"Municipal \"], [\"Dyess AFB \"], [\"Municipal \"], [\"Virginia Highlands \"], [\"Ada \"], [\"Adak Island Ns \"], [\"Lenawee County \"], [\"Municipal \"], [\"Municipal \"], [\"Ainsworth \"], [\"Akhiok SPB \"], [\"Spb \"], [\"Akiak \"], [\"Colorado Plains Regional Airport \"], [\"Akron/canton Regional \"], [\"Fulton International \"], [\"Akutan \"], [\"Alakanuk \"], [\"NAS \"], [\"Holloman AFB \"], [\"Municipal \"], [\"Municipal \"], [\"Albany NAS \"], [\"Dougherty County \"], [\"Albany International \"], [\"Albany \"], [\"Albert Lea \"], [\"Albuquerque International \"], [\"Aleknagik \"], [\"Aleneva \"], [\"Thomas C Russell Fld \"], [\"Alexandria International \"], [\"Esler Field \"], [\"Alexandria \"], [\"Alexandria Bay \"], [\"Algona \"], [\"International \"], [\"George Downer \"], [\"Alitak SPB \"], [\"Allakaket \"], [\"Alliance \"], [\"Gratiot Community \"], [\"Alpena County Regional \"], [\"Alpine \"], [\"Alton \"], [\"Altus AFB \"], [\"Municipal \"], [\"Alyeska \"], [\"Rick Husband Amarillo International \"], [\"Tradewind \"], [\"Ambler \"], [\"Amchitka \"], [\"Municipal \"], [\"Ames \"], [\"Zahns \"], [\"Amook \"], [\"Anacortes \"], [\"USN Heliport \"], [\"Orange County Steel Salvage Heliport \"], [\"Anaktuvuk \"], [\"Elmendorf Afb \"], [\"Ted Stevens Anchorage International Airport \"], [\"Merrill Field \"], [\"Municipal \"], [\"Anderson \"], [\"Andrews \"], [\"Angel Fire \"], [\"Tri-State Steuben Cty \"], [\"Angoon \"], [\"Rollang Field \"], [\"Aniak \"], [\"Anita Bay \"], [\"Municipal \"], [\"Lee \"], [\"Annette Island \"], [\"Anniston Metropolitan \"], [\"Ft Mcclellan Bus Trml \"], [\"Reilly AHP \"], [\"Anthony \"], [\"Antlers \"], [\"Anvik \"], [\"Municipal \"], [\"Apple Valley \"], [\"Outagamie County \"], [\"Municipal \"], [\"Arcata \"], [\"Arctic Village \"], [\"Downtown \"], [\"Ardmore Municipal Arpt \"], [\"US Army Heliport \"], [\"Artesia \"], [\"Asbury Park \"], [\"Ashland \"], [\"Ashley \"], [\"Aspen \"], [\"Astoria \"], [\"Athens \"], [\"Ohio University \"], [\"McMinn County \"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_31", "question": "Give the number of Jetblue Airways flights.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "execution_result": "[[100]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_32", "question": "Which airlines have departures from CVO but not from APG airports?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_33", "question": "Count the number of flights departing from 'APG'.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_34", "question": "Give the code of the airport with the least flights.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_35", "question": "What are airlines that have flights arriving at airport 'AHD'?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_36", "question": "Which abbreviation corresponds to Jetblue Airways?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "execution_result": "[[\"JetBlue\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_37", "question": "Which airlines have less than 200 flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "execution_result": "[[\"AirTran Airways\"], [\"Allegiant Air\"], [\"American Airlines\"], [\"Continental Airlines\"], [\"Delta Airlines\"], [\"Frontier Airlines\"], [\"JetBlue Airways\"], [\"Northwest Airlines\"], [\"Southwest Airlines\"], [\"US Airways\"], [\"United Airlines\"], [\"Virgin America\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_38", "question": "Which city is the most frequent source airport?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_39", "question": "Count the number of United Airlines flights that arrive in Aberdeen.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_40", "question": "What are airport names at City 'Aberdeen'?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_41", "question": "Count the number of flights into ATO.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_42", "question": "Give the flight numbers of flights leaving from Aberdeen.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_43", "question": "List the airport code and name in the city of Anthony.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_44", "question": "How many flights do we have?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS", "execution_result": "[[1200]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_45", "question": "How many flights have destination ATO?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_46", "question": "What is the code of airport that has fewest number of flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_47", "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_48", "question": "How many flights arriving in Aberdeen city?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_49", "question": "Which airline has most number of flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"Virgin America\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_50", "question": "How many 'United Airlines' flights go to Airport 'ASY'?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_51", "question": "What is the code of airport that has the highest number of flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_52", "question": "Find all airlines that have fewer than 200 flights.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "execution_result": "[[\"AirTran Airways\"], [\"Allegiant Air\"], [\"American Airlines\"], [\"Continental Airlines\"], [\"Delta Airlines\"], [\"Frontier Airlines\"], [\"JetBlue Airways\"], [\"Northwest Airlines\"], [\"Southwest Airlines\"], [\"US Airways\"], [\"United Airlines\"], [\"Virgin America\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_53", "question": "How many flights does airline 'JetBlue Airways' have?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "execution_result": "[[100]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_54", "question": "Return the number of flights.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS", "execution_result": "[[1200]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_55", "question": "Find the number of flights landing in the city of Aberdeen or Abilene.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_56", "question": "Which city has most number of arriving flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_57", "question": "Return the number of airlines in the USA.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_58", "question": "How many flights land in Aberdeen or Abilene?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_59", "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_60", "question": "Which airlines have at least 10 flights?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10", "execution_result": "[[\"AirTran Airways\"], [\"Allegiant Air\"], [\"American Airlines\"], [\"Continental Airlines\"], [\"Delta Airlines\"], [\"Frontier Airlines\"], [\"JetBlue Airways\"], [\"Northwest Airlines\"], [\"Southwest Airlines\"], [\"US Airways\"], [\"United Airlines\"], [\"Virgin America\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_61", "question": "Return the name of the airport with code 'AKO'.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"", "execution_result": "[[\"Colorado Plains Regional Airport \"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_62", "question": "Which airlines have a flight with source airport AHD?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_63", "question": "List all airline names and their abbreviations in \"USA\".", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "execution_result": "[[\"United Airlines\", \"UAL\"], [\"US Airways\", \"USAir\"], [\"Delta Airlines\", \"Delta\"], [\"Southwest Airlines\", \"Southwest\"], [\"American Airlines\", \"American\"], [\"Northwest Airlines\", \"Northwest\"], [\"Continental Airlines\", \"Continental\"], [\"JetBlue Airways\", \"JetBlue\"], [\"Frontier Airlines\", \"Frontier\"], [\"AirTran Airways\", \"AirTran\"], [\"Allegiant Air\", \"Allegiant\"], [\"Virgin America\", \"Virgin\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_64", "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_65", "question": "Give the flight numbers of flights landing at APG.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_66", "question": "Give the airport code and airport name corresonding to the city Anthony.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_67", "question": "What is the total number of airlines?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM AIRLINES", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_68", "question": "Which country does Airline \"JetBlue Airways\" belong to?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "execution_result": "[[\"USA\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_69", "question": "Give the flight numbers of flights arriving in Aberdeen.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_70", "question": "Return the number of flights departing from Aberdeen.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_71", "question": "What are flight numbers of flights arriving at Airport \"APG\"?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_72", "question": "What is the abbreviation of Airline \"JetBlue Airways\"?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "execution_result": "[[\"JetBlue\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_73", "question": "Which city has the most frequent destination airport?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_74", "question": "How many airlines do we have?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM AIRLINES", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_75", "question": "How many flights depart from City Aberdeen?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_76", "question": "Return the number of flights arriving in Aberdeen.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["irena", "maname", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_77", "question": "Give the airline with abbreviation 'UAL'.", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "execution_result": "[[\"United Airlines\"]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_78", "question": "Which airlines have a flight with destination airport AHD?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "execution_result": "[]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "flight_2_79", "question": "What are flight numbers of Airline \"United Airlines\"?", "db_id": "flight_2", "table_names": ["airlines", "airports", "flights"], "gold_sql_query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"", "execution_result": "[[28], [29], [44], [45], [54], [55], [90], [91], [108], [109], [142], [143], [148], [149], [198], [199], [226], [227], [276], [277], [308], [309], [326], [327], [370], [371], [414], [415], [424], [425], [470], [471], [520], [521], [556], [557], [560], [561], [604], [605], [608], [609], [626], [627], [658], [659], [708], [709], [744], [745], [754], [755], [786], [787], [810], [811], [828], [829], [878], [879], [888], [889], [900], [901], [924], [925], [946], [947], [996], [997], [1000], [1001], [1026], [1027], [1062], [1063], [1068], [1069], [1100], [1101], [1144], [1145], [1166], [1167], [1168], [1169], [1192], [1193], [1208], [1209], [1216], [1217], [1250], [1251], [1274], [1275], [1284], [1285], [1328], [1329]]", "tenant_id": "tenant_data_v2/flight_2", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_0", "question": "Find the names of employees who never won any award in the evaluation.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "employee_hire_evaluation_1", "question": "What are the manager name and district of the shop that sells the largest number of products?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "execution_result": "[[\"Ilkka M\\u00e4kel\\u00e4\", \"Lahden Stadion\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_2", "question": "Return the name, location and district of all shops in descending order of number of products.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "execution_result": "[[\"FC Lahti\", \"Lahti\", \"Lahden Stadion\"], [\"HJK\", \"Helsinki\", \"Finnair Stadium\"], [\"FC Inter\", \"Turku\", \"Veritas Stadion\"], [\"FC Honka\", \"Espoo\", \"Tapiolan Urheilupuisto\"], [\"FF Jaro\", \"Jakobstad\", \"Jakobstads Centralplan\"], [\"FC KooTeePee\", \"Kotka\", \"Arto Tolsa Areena\"], [\"FC Haka\", \"Valkeakoski\", \"Tehtaan kentt\\u00e4\"], [\"KuPS\", \"Kuopio\", \"Magnum Areena\"], [\"IFK Mariehamn\", \"Mariehamn\", \"Wikl\\u00f6f Holding Arena\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_3", "question": "How many employees are there?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT count(*) FROM employee", "execution_result": "[[10]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_4", "question": "Find the number of shops in each location.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "execution_result": "[[1, \"Espoo\"], [1, \"Helsinki\"], [1, \"Jakobstad\"], [1, \"Kotka\"], [1, \"Kuopio\"], [1, \"Lahti\"], [1, \"Mariehamn\"], [1, \"Turku\"], [1, \"Valkeakoski\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_5", "question": "Find the cities that have more than one employee under age 30.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "execution_result": "[[\"Bath\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_6", "question": "What is the number of employees from each city?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT count(*) ,  city FROM employee GROUP BY city", "execution_result": "[[3, \"Bath\"], [3, \"Bristol\"], [1, \"Leicester\"], [1, \"Sale\"], [2, \"Wasps\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_7", "question": "Which shop has the most employees? Give me the shop name.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"FC Haka\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["juan", "harpreet", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_8", "question": "Which cities do more than one employee under age 30 come from?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1", "execution_result": "[[\"Bath\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_9", "question": "How many different store locations are there?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT count(DISTINCT LOCATION) FROM shop", "execution_result": "[[9]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_10", "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "execution_result": "[]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_11", "question": "Count the number of distinct store locations.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT count(DISTINCT LOCATION) FROM shop", "execution_result": "[[9]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_12", "question": "Find the number of employees hired in each shop; show the shop name as well.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "execution_result": "[[2, \"FC Haka\"], [1, \"FC Inter\"], [1, \"FC KooTeePee\"], [1, \"FC Lahti\"], [1, \"FF Jaro\"], [1, \"HJK\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["juan", "harpreet", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_13", "question": "Which employee received the biggest bonus? Give me the employee name.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "employee_hire_evaluation_14", "question": "Give me all the information about hiring.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT * FROM hiring", "execution_result": "[[1, 1, \"2009\", \"T\"], [1, 2, \"2003\", \"T\"], [8, 3, \"2011\", \"F\"], [4, 4, \"2012\", \"T\"], [5, 5, \"2013\", \"T\"], [2, 6, \"2010\", \"F\"], [6, 7, \"2008\", \"T\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["juan", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_15", "question": "Sort employee names by their age in ascending order.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT name FROM employee ORDER BY age", "execution_result": "[[\"George Chuter\"], [\"Andrew Sheridan\"], [\"Lee Mears\"], [\"Tim Payne\"], [\"Matt Stevens\"], [\"Jason Hobson\"], [\"Steve Borthwick\"], [\"Louis Deacon\"], [\"Phil Vickery\"], [\"Mark Regan\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_16", "question": "Which employee received the most awards in evaluations? Give me the employee name.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "employee_hire_evaluation_17", "question": "Find the name of the shops that do not hire any employee.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "execution_result": "[[\"FC Honka\"], [\"KuPS\"], [\"IFK Mariehamn\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["juan", "harpreet", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_18", "question": "Count the number of employees for each city.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT count(*) ,  city FROM employee GROUP BY city", "execution_result": "[[3, \"Bath\"], [3, \"Bristol\"], [1, \"Leicester\"], [1, \"Sale\"], [2, \"Wasps\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_19", "question": "Find the name of the employee who got the highest one time bonus.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "employee_hire_evaluation_20", "question": "Find the names of stores whose number products is more than the average number of products.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "execution_result": "[[\"HJK\"], [\"FC Inter\"], [\"FC Lahti\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_21", "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC", "execution_result": "[[\"FC Lahti\", \"Lahti\", \"Lahden Stadion\"], [\"HJK\", \"Helsinki\", \"Finnair Stadium\"], [\"FC Inter\", \"Turku\", \"Veritas Stadion\"], [\"FC Honka\", \"Espoo\", \"Tapiolan Urheilupuisto\"], [\"FF Jaro\", \"Jakobstad\", \"Jakobstads Centralplan\"], [\"FC KooTeePee\", \"Kotka\", \"Arto Tolsa Areena\"], [\"FC Haka\", \"Valkeakoski\", \"Tehtaan kentt\\u00e4\"], [\"KuPS\", \"Kuopio\", \"Magnum Areena\"], [\"IFK Mariehamn\", \"Mariehamn\", \"Wikl\\u00f6f Holding Arena\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_22", "question": "What is total bonus given in all evaluations?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT sum(bonus) FROM evaluation", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "employee_hire_evaluation_23", "question": "What is the name of the shop that is hiring the largest number of employees?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"FC Haka\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["juan", "harpreet", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_24", "question": "Which shops run with no employees? Find the shop names", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)", "execution_result": "[[\"FC Honka\"], [\"KuPS\"], [\"IFK Mariehamn\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["juan", "harpreet", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_25", "question": "Find the manager name and district of the shop whose number of products is the largest.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1", "execution_result": "[[\"Ilkka M\\u00e4kel\\u00e4\", \"Lahden Stadion\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_26", "question": "For each shop, return the number of employees working there and the name of the shop.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name", "execution_result": "[[2, \"FC Haka\"], [1, \"FC Inter\"], [1, \"FC KooTeePee\"], [1, \"FC Lahti\"], [1, \"FF Jaro\"], [1, \"HJK\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["juan", "harpreet", "farshid", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_27", "question": "Count the number of employees", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT count(*) FROM employee", "execution_result": "[[10]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_28", "question": "Which shops' number products is above the average? Give me the shop names.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)", "execution_result": "[[\"HJK\"], [\"FC Inter\"], [\"FC Lahti\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_29", "question": "What are the names of the employees who never received any evaluation?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "employee_hire_evaluation_30", "question": "What is all the information about hiring?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT * FROM hiring", "execution_result": "[[1, 1, \"2009\", \"T\"], [1, 2, \"2003\", \"T\"], [8, 3, \"2011\", \"F\"], [4, 4, \"2012\", \"T\"], [5, 5, \"2013\", \"T\"], [2, 6, \"2010\", \"F\"], [6, 7, \"2008\", \"T\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["juan", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_31", "question": "List the names of employees and sort in ascending order of age.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT name FROM employee ORDER BY age", "execution_result": "[[\"George Chuter\"], [\"Andrew Sheridan\"], [\"Lee Mears\"], [\"Tim Payne\"], [\"Matt Stevens\"], [\"Jason Hobson\"], [\"Steve Borthwick\"], [\"Louis Deacon\"], [\"Phil Vickery\"], [\"Mark Regan\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_32", "question": "What are the minimum and maximum number of products across all the shops?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "execution_result": "[[1600, 15000]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_33", "question": "find the name of employee who was awarded the most times in the evaluation.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "employee_hire_evaluation_34", "question": "find the minimum and maximum number of products of all stores.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT min(Number_products) ,  max(Number_products) FROM shop", "execution_result": "[[1600, 15000]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_35", "question": "How many shops are there in each location?", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION", "execution_result": "[[1, \"Espoo\"], [1, \"Helsinki\"], [1, \"Jakobstad\"], [1, \"Kotka\"], [1, \"Kuopio\"], [1, \"Lahti\"], [1, \"Mariehamn\"], [1, \"Turku\"], [1, \"Valkeakoski\"]]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "employee_hire_evaluation_36", "question": "Find the total amount of bonus given in all the evaluations.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT sum(bonus) FROM evaluation", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "employee_hire_evaluation_37", "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "db_id": "employee_hire_evaluation", "table_names": ["employee", "shop", "hiring", "evaluation"], "gold_sql_query": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000", "execution_result": "[]", "tenant_id": "tenant_data_v2/employee_hire_evaluation", "reference_people": ["harpreet", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_0", "question": "What are the names of documents that use templates with the code BK?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "execution_result": "[[\"Robbin CV\"], [\"Data base\"], [\"How to read a book\"], [\"Palm reading\"], [\"About Korea\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_1", "question": "What are the different template type codes?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT DISTINCT template_type_code FROM Templates", "execution_result": "[[\"PP\"], [\"BK\"], [\"PPT\"], [\"AD\"], [\"CV\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_2", "question": "What is the document id with least number of paragraphs?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_3", "question": "What are the ids, names, and descriptions for all documents?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id ,  document_name ,  document_description FROM Documents", "execution_result": "[[0, \"Introduction of OS\", \"n\"], [1, \"Understanding DB\", \"y\"], [3, \"Summer Show\", \"u\"], [76, \"Robbin CV\", \"y\"], [80, \"Welcome to NY\", \"h\"], [82, \"Data base\", \"w\"], [2394, \"Customer reviews\", \"y\"], [3830, \"Do not panic\", \"k\"], [33930, \"How Google people work\", \"z\"], [50123, \"Learning French\", \"r\"], [651512, \"How to write a CV\", \"f\"], [801801, \"How to read a book\", \"w\"], [3540024, \"Palm reading\", \"y\"], [16514113, \"A history of Arts\", \"h\"], [385906526, \"About Korea\", \"b\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_4", "question": "Count the number of documents that use the PPT template type.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_5", "question": "Count the number of paragraphs in the document named 'Summer Show'.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_6", "question": "Show all template type codes that are not used by any document.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "execution_result": "[[\"CV\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_7", "question": "Return the type code of the template type with the description \"Book\".", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "execution_result": "[[\"BK\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_8", "question": "Return the id and type code of the template that is used for the greatest number of documents.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[25, \"PP\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_9", "question": "What is the template type descriptions for template type code \"AD\".", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "execution_result": "[[\"Advertisement\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_10", "question": "What are the ids of templates with template type code PP or PPT?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "execution_result": "[[0], [1], [6], [7], [10], [18], [22], [24], [25]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_11", "question": "What are the ids and names of each document, as well as the number of paragraphs in each?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_12", "question": "Show template ids, version numbers, and template type codes for all templates.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "execution_result": "[[0, 5, \"PP\"], [1, 9, \"PP\"], [4, 4, \"BK\"], [6, 2, \"PPT\"], [7, 8, \"PPT\"], [8, 3, \"BK\"], [9, 2, \"BK\"], [10, 1, \"PPT\"], [11, 6, \"BK\"], [14, 7, \"AD\"], [15, 9, \"CV\"], [16, 5, \"CV\"], [18, 5, \"PP\"], [19, 7, \"AD\"], [20, 6, \"BK\"], [21, 9, \"AD\"], [22, 0, \"PP\"], [23, 2, \"BK\"], [24, 8, \"PP\"], [25, 5, \"PP\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_13", "question": "Show all template type codes with less than three templates.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "execution_result": "[[\"CV\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_14", "question": "What is the document id with 1 to 2 paragraphs?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_15", "question": "Show all distinct template type codes for all templates.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT DISTINCT template_type_code FROM Templates", "execution_result": "[[\"PP\"], [\"BK\"], [\"PPT\"], [\"AD\"], [\"CV\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_16", "question": "What is the id and type code for the template used by the most documents?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[25, \"PP\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_17", "question": "Return the names and template ids for documents that contain the letter w in their description.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "execution_result": "[[\"Data base\", 11], [\"How to read a book\", 4]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_18", "question": "What are the ids, version numbers, and type codes for each template?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates", "execution_result": "[[0, 5, \"PP\"], [1, 9, \"PP\"], [4, 4, \"BK\"], [6, 2, \"PPT\"], [7, 8, \"PPT\"], [8, 3, \"BK\"], [9, 2, \"BK\"], [10, 1, \"PPT\"], [11, 6, \"BK\"], [14, 7, \"AD\"], [15, 9, \"CV\"], [16, 5, \"CV\"], [18, 5, \"PP\"], [19, 7, \"AD\"], [20, 6, \"BK\"], [21, 9, \"AD\"], [22, 0, \"PP\"], [23, 2, \"BK\"], [24, 8, \"PP\"], [25, 5, \"PP\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_19", "question": "What is the document name and template id for document with description with the letter 'w' in it?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"", "execution_result": "[[\"Data base\", 11], [\"How to read a book\", 4]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_20", "question": "Count the number of paragraphs.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Paragraphs", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_21", "question": "What is the template type code for template type description \"Book\".", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"", "execution_result": "[[\"BK\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_22", "question": "What is the version number and template type code for the template with version number later than 5?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "execution_result": "[[9, \"PP\"], [8, \"PPT\"], [6, \"BK\"], [7, \"AD\"], [9, \"CV\"], [7, \"AD\"], [6, \"BK\"], [9, \"AD\"], [8, \"PP\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_23", "question": "Return the different descriptions for templates that have been used in a document.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "execution_result": "[[\"Presentation\"], [\"Paper\"], [\"Book\"], [\"Advertisement\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_24", "question": "Return the ids corresponding to templates with the description 'Presentation'.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "execution_result": "[[6], [7], [10]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_25", "question": "How many templates do we have?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Templates", "execution_result": "[[20]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_26", "question": "List document IDs, document names, and document descriptions for all documents.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id ,  document_name ,  document_description FROM Documents", "execution_result": "[[0, \"Introduction of OS\", \"n\"], [1, \"Understanding DB\", \"y\"], [3, \"Summer Show\", \"u\"], [76, \"Robbin CV\", \"y\"], [80, \"Welcome to NY\", \"h\"], [82, \"Data base\", \"w\"], [2394, \"Customer reviews\", \"y\"], [3830, \"Do not panic\", \"k\"], [33930, \"How Google people work\", \"z\"], [50123, \"Learning French\", \"r\"], [651512, \"How to write a CV\", \"f\"], [801801, \"How to read a book\", \"w\"], [3540024, \"Palm reading\", \"y\"], [16514113, \"A history of Arts\", \"h\"], [385906526, \"About Korea\", \"b\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_27", "question": "What is the document id and name with greatest number of paragraphs?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_28", "question": "Show all document ids and the number of paragraphs in each document. Order by document id.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_29", "question": "Count the number of templates of the type CV.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_30", "question": "How many paragraphs in total?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Paragraphs", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_31", "question": "What are the ids of documents that have 2 or more paragraphs?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_32", "question": "What are the paragraph texts for the document with the name 'Customer reviews'?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_33", "question": "Show all template type codes and number of templates for each.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "execution_result": "[[\"AD\", 3], [\"BK\", 6], [\"CV\", 2], [\"PP\", 6], [\"PPT\", 3]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_34", "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_35", "question": "What are the codes of template types that have fewer than 3 templates?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3", "execution_result": "[[\"CV\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_36", "question": "Count the number of templates.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Templates", "execution_result": "[[20]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_37", "question": "What are all different template ids used for documents, and how many times were each of them used?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "execution_result": "[[1, 1], [4, 1], [6, 1], [7, 1], [8, 1], [10, 1], [11, 2], [14, 2], [20, 1], [21, 1], [22, 1], [25, 2]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_38", "question": "How many paragraphs for the document with name 'Summer Show'?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_39", "question": "What are the template ids of any templates used in more than a single document?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "execution_result": "[[11], [14], [25]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_40", "question": "List all document ids with at least two paragraphs.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_41", "question": "What are the codes of template types that are not used for any document?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id", "execution_result": "[[\"CV\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_42", "question": "Which template type code is used by most number of documents?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"BK\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_43", "question": "Return the document id, template id, and description for the document with the name Robbin CV.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "execution_result": "[[76, 20, \"y\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_44", "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_45", "question": "What are the details for the paragraph that includes the text 'Korea ' ?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "select other_details from paragraphs where paragraph_text like 'korea'", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_46", "question": "What is the document id, template id and description for document named \"Robbin CV\"?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"", "execution_result": "[[76, 20, \"y\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_47", "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_48", "question": "What are the distinct template type descriptions for the templates ever used by any document?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID", "execution_result": "[[\"Presentation\"], [\"Paper\"], [\"Book\"], [\"Advertisement\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_49", "question": "Return the type code of the template type that the most templates belong to.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"PP\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_50", "question": "Show all document names using templates with template type code BK.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"", "execution_result": "[[\"Robbin CV\"], [\"Data base\"], [\"How to read a book\"], [\"Palm reading\"], [\"About Korea\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_51", "question": "How many documents do we have?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Documents", "execution_result": "[[15]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_52", "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_53", "question": "Return the template type code of the template that is used by a document named Data base.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "execution_result": "[[\"BK\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_54", "question": "What are the type codes and descriptions for all template types?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "execution_result": "[[\"PPT\", \"Presentation\"], [\"CV\", \"CV\"], [\"AD\", \"Advertisement\"], [\"PP\", \"Paper\"], [\"BK\", \"Book\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_55", "question": "Return the lowest version number, along with its corresponding template type code.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "execution_result": "[[0, \"PP\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_56", "question": "What are the ids for templates that are not used in any documents?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "execution_result": "[[0], [9], [15], [16], [18], [19], [23], [24]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_57", "question": "What are the different template type codes, and how many documents use each type?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "execution_result": "[[\"AD\", 3], [\"BK\", 5], [\"PP\", 4], [\"PPT\", 3]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_58", "question": "Which template type code has most number of templates?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"PP\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_59", "question": "Return the template type description of the template type with the code AD.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"", "execution_result": "[[\"Advertisement\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_60", "question": "How many templates have template type code CV?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_61", "question": "How many documents are using the template with type code 'PPT'?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_62", "question": "Show ids for all templates not used by any document.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents", "execution_result": "[[0], [9], [15], [16], [18], [19], [23], [24]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_63", "question": "Return the code of the template type that is most commonly used in documents.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"BK\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_64", "question": "Return the version numbers and template type codes of templates with a version number greater than 5.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5", "execution_result": "[[9, \"PP\"], [8, \"PPT\"], [6, \"BK\"], [7, \"AD\"], [9, \"CV\"], [7, \"AD\"], [6, \"BK\"], [9, \"AD\"], [8, \"PP\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_65", "question": "How many different templates do all document use?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(DISTINCT template_id) FROM Documents", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_66", "question": "Show all template type codes and the number of documents using each type.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code", "execution_result": "[[\"AD\", 3], [\"BK\", 5], [\"PP\", 4], [\"PPT\", 3]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_67", "question": "Give the ids of documents that have between one and two paragraphs.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_68", "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_69", "question": "Show paragraph details for paragraph with text 'Korea ' .", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "select other_details from paragraphs where paragraph_text like 'korea'", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_70", "question": "Return the ids of templates that have the code PP or PPT.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"", "execution_result": "[[0], [1], [6], [7], [10], [18], [22], [24], [25]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_71", "question": "Show all paragraph texts for the document \"Customer reviews\".", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_72", "question": "Return the id and name of the document with the most paragraphs.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_73", "question": "Show all template ids and number of documents using each template.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id", "execution_result": "[[1, 1], [4, 1], [6, 1], [7, 1], [8, 1], [10, 1], [11, 2], [14, 2], [20, 1], [21, 1], [22, 1], [25, 2]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_74", "question": "Show all document ids, names and the number of paragraphs in each document.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_75", "question": "Return the id of the document with the fewest paragraphs.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "cre_Doc_Template_Mgt_76", "question": "Count the number of documents.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(*) FROM Documents", "execution_result": "[[15]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_77", "question": "Count the number of different templates used for documents.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT count(DISTINCT template_id) FROM Documents", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_78", "question": "What is the template type code of the template used by document with the name \"Data base\"?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"", "execution_result": "[[\"BK\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "farshid", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_79", "question": "What are the template ids with template type description \"Presentation\".", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"", "execution_result": "[[6], [7], [10]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_80", "question": "What the smallest version number and its template type code?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT min(Version_Number) ,  template_type_code FROM Templates", "execution_result": "[[0, \"PP\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_81", "question": "Show ids for all templates that are used by more than one document.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1", "execution_result": "[[11], [14], [25]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_82", "question": "Show all template type codes and descriptions.", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code ,  template_type_description FROM Ref_template_types", "execution_result": "[[\"PPT\", \"Presentation\"], [\"CV\", \"CV\"], [\"AD\", \"Advertisement\"], [\"PP\", \"Paper\"], [\"BK\", \"Book\"]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "cre_Doc_Template_Mgt_83", "question": "What are the different template type codes, and how many templates correspond to each?", "db_id": "cre_Doc_Template_Mgt", "table_names": ["reference template types", "templates", "documents", "paragraphs"], "gold_sql_query": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code", "execution_result": "[[\"AD\", 3], [\"BK\", 6], [\"CV\", 2], [\"PP\", 6], [\"PPT\", 3]]", "tenant_id": "tenant_data_v2/cre_Doc_Template_Mgt", "reference_people": ["kerstin", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_0", "question": "Show the name of teachers aged either 32 or 33?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "execution_result": "[[\"Joseph Huts\"], [\"John Deloor\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_1", "question": "What are the names of the teachers who are aged either 32 or 33?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33", "execution_result": "[[\"Joseph Huts\"], [\"John Deloor\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_2", "question": "Show the hometowns shared by at least two teachers.", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "execution_result": "[]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_3", "question": "What are the names of the teachers whose courses have not been arranged?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "execution_result": "[[\"Joseph Huts\"], [\"John Deloor\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_4", "question": "Show names of teachers and the courses they are arranged to teach.", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "execution_result": "[[\"Kearsley Brown\", \"Math\"], [\"Vicente Carretero\", \"Math\"], [\"Gustaaf Deloor\", \"Science\"], [\"Anne Walker\", \"History\"], [\"Anne Walker\", \"Bible\"], [\"Lucy Wong\", \"Music\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "alice", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_5", "question": "What are the names of the teachers and how many courses do they teach?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "execution_result": "[[\"Anne Walker\", 2], [\"Gustaaf Deloor\", 1], [\"Kearsley Brown\", 1], [\"Lucy Wong\", 1], [\"Vicente Carretero\", 1]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_6", "question": "What are the names of the teachers who teach at least two courses?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "execution_result": "[[\"Anne Walker\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_7", "question": "What is the total count of teachers?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT count(*) FROM teacher", "execution_result": "[[7]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_8", "question": "List the names of teachers in ascending order of age.", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Name FROM teacher ORDER BY Age ASC", "execution_result": "[[\"Vicente Carretero\"], [\"Gustaaf Deloor\"], [\"Joseph Huts\"], [\"John Deloor\"], [\"Lucy Wong\"], [\"Anne Walker\"], [\"Kearsley Brown\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_9", "question": "Show the name of the teacher for the math course.", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "execution_result": "[[\"Kearsley Brown\"], [\"Vicente Carretero\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "alice", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_10", "question": "List the names of teachers who have not been arranged to teach courses.", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)", "execution_result": "[[\"Joseph Huts\"], [\"John Deloor\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_11", "question": "What is the most commmon hometowns for teachers?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "execution_result": "[[\"Turton Urban District\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_12", "question": "List the most common hometown of teachers.", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1", "execution_result": "[[\"Turton Urban District\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_13", "question": "List the name of teachers whose hometown is not `` Little Lever Urban District '' .", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "select name from teacher where hometown != \"little lever urban district\"", "execution_result": "[[\"Joseph Huts\"], [\"Gustaaf Deloor\"], [\"Vicente Carretero\"], [\"John Deloor\"], [\"Kearsley Brown\"], [\"Anne Walker\"], [\"Lucy Wong\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_14", "question": "Show different hometown of teachers and the number of teachers from each hometown.", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "execution_result": "[[\"Blackrod Urban District\", 1], [\"Bolton County Borough\", 1], [\"Farnworth Municipal Borough\", 1], [\"Horwich Urban District\", 1], [\"Kearsley Urban District\", 1], [\"Little Lever Urban District\", 1], [\"Turton Urban District\", 1]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_15", "question": "What is the hometown of the youngest teacher?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "execution_result": "[[\"Farnworth Municipal Borough\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_16", "question": "What are the names of the people who teach math courses?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"", "execution_result": "[[\"Kearsley Brown\"], [\"Vicente Carretero\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "alice", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_17", "question": "How many teachers are there?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT count(*) FROM teacher", "execution_result": "[[7]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_18", "question": "Show names of teachers that teach at least two courses.", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2", "execution_result": "[[\"Anne Walker\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_19", "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "execution_result": "[[\"Anne Walker\", \"History\"], [\"Anne Walker\", \"Bible\"], [\"Gustaaf Deloor\", \"Science\"], [\"Kearsley Brown\", \"Math\"], [\"Lucy Wong\", \"Music\"], [\"Vicente Carretero\", \"Math\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "alice", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_20", "question": "What is the age and hometown of every teacher?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Age ,  Hometown FROM teacher", "execution_result": "[[\"32\", \"Blackrod Urban District\"], [\"29\", \"Bolton County Borough\"], [\"26\", \"Farnworth Municipal Borough\"], [\"33\", \"Horwich Urban District\"], [\"45\", \"Kearsley Urban District\"], [\"41\", \"Little Lever Urban District\"], [\"39\", \"Turton Urban District\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_21", "question": "What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "select name from teacher where hometown != \"little lever urban district\"", "execution_result": "[[\"Joseph Huts\"], [\"Gustaaf Deloor\"], [\"Vicente Carretero\"], [\"John Deloor\"], [\"Kearsley Brown\"], [\"Anne Walker\"], [\"Lucy Wong\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_22", "question": "What are the age and hometown of teachers?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Age ,  Hometown FROM teacher", "execution_result": "[[\"32\", \"Blackrod Urban District\"], [\"29\", \"Bolton County Borough\"], [\"26\", \"Farnworth Municipal Borough\"], [\"33\", \"Horwich Urban District\"], [\"45\", \"Kearsley Urban District\"], [\"41\", \"Little Lever Urban District\"], [\"39\", \"Turton Urban District\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_23", "question": "What is the name of each teacher and what course they teach?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID", "execution_result": "[[\"Kearsley Brown\", \"Math\"], [\"Vicente Carretero\", \"Math\"], [\"Gustaaf Deloor\", \"Science\"], [\"Anne Walker\", \"History\"], [\"Anne Walker\", \"Bible\"], [\"Lucy Wong\", \"Music\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "alice", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_24", "question": "For each hometown, how many teachers are there?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown", "execution_result": "[[\"Blackrod Urban District\", 1], [\"Bolton County Borough\", 1], [\"Farnworth Municipal Borough\", 1], [\"Horwich Urban District\", 1], [\"Kearsley Urban District\", 1], [\"Little Lever Urban District\", 1], [\"Turton Urban District\", 1]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_25", "question": "What are the towns from which at least two teachers come from?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2", "execution_result": "[]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_26", "question": "Show names of teachers and the number of courses they teach.", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name", "execution_result": "[[\"Anne Walker\", 2], [\"Gustaaf Deloor\", 1], [\"Kearsley Brown\", 1], [\"Lucy Wong\", 1], [\"Vicente Carretero\", 1]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_27", "question": "Where is the youngest teacher from?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "execution_result": "[[\"Farnworth Municipal Borough\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_28", "question": "What are the names of the teachers ordered by ascending age?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT Name FROM teacher ORDER BY Age ASC", "execution_result": "[[\"Vicente Carretero\"], [\"Gustaaf Deloor\"], [\"Joseph Huts\"], [\"John Deloor\"], [\"Lucy Wong\"], [\"Anne Walker\"], [\"Kearsley Brown\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "course_teach_29", "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "db_id": "course_teach", "table_names": ["course", "teacher", "course arrange"], "gold_sql_query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name", "execution_result": "[[\"Anne Walker\", \"History\"], [\"Anne Walker\", \"Bible\"], [\"Gustaaf Deloor\", \"Science\"], [\"Kearsley Brown\", \"Math\"], [\"Lucy Wong\", \"Music\"], [\"Vicente Carretero\", \"Math\"]]", "tenant_id": "tenant_data_v2/course_teach", "reference_people": ["gorosti", "bhushan", "alice", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_0", "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "execution_result": "[[\"Plaza Museum\"], [\"Capital Plaza Museum\"], [\"Jefferson Development Museum\"]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_1", "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC", "execution_result": "[[\"Fernando Gago\", 6], [\"Gonzalo Higua\\u00edn \", 8], [\"Guti Midfielder\", 5]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_2", "question": "What is the name of the museum that had no visitor yet?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)", "execution_result": "[[\"Jefferson Development Museum\"], [\"RiverPark Museum\"], [\"Place Tower Museum\"], [\"Central City District Residential Museum\"]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_3", "question": "Find the number of visitors who did not visit any museum opened after 2010.", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_4", "question": "What is the average age of the visitors whose membership level is not higher than 4?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "execution_result": "[[36.0]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_5", "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1", "execution_result": "[[\"3\", \"Arjen Robben\", 1]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_6", "question": "How many visitors below age 30 are there?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT count(*) FROM visitor WHERE age  <  30", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_7", "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "execution_result": "[[\"Fernando Gago\"]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_8", "question": "How many museums were opened after 2013 or before 2008?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "execution_result": "[[1]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_9", "question": "find the id, name and age for visitors who visited some museums more than once.", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "execution_result": "[[3, \"Arjen Robben\", 27], [5, \"Fernando Gago\", 36], [6, \"Rafael van der Vaart\", 25]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_10", "question": "Find the average number of staff working for the museums that were open before 2009.", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "execution_result": "[[31.333333333333332]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_11", "question": "What is the total ticket expense of the visitors whose membership level is 1?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1", "execution_result": "[[570.84]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_12", "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "execution_result": "[[\"Gonzalo Higua\\u00edn \"], [\"Fernando Gago\"], [\"Guti Midfielder\"]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_13", "question": "What are the average and maximum number of tickets bought in all visits?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit", "execution_result": "[[10.5, 24]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_14", "question": "Find the id and name of the museum that has the most staff members?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "execution_result": "[[1, \"Plaza Museum\"]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_15", "question": "What are the id and name of the museum visited most times?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[2, \"Capital Plaza Museum\"]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["alice", "maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_16", "question": "Find the name and age of the visitor who bought the most tickets at once.", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "execution_result": "[[\"Arjen Robben\", 27]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["maname", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "museum_visit_17", "question": "What are the opening year and staff number of the museum named Plaza Museum?", "db_id": "museum_visit", "table_names": ["museum", "customer", "visit"], "gold_sql_query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'", "execution_result": "[[62, \"2000\"]]", "tenant_id": "tenant_data_v2/museum_visit", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_0", "question": "How many different results are there for the battles?", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT count(DISTINCT RESULT) FROM battle", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_1", "question": "List the name and tonnage ordered by in descending alphaetical order for the names.", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT name ,  tonnage FROM ship ORDER BY name DESC", "execution_result": "[[\"Three Brothers\", \"t\"], [\"Mary\", \"t\"], [\"Lettice\", \"t\"], [\"HMS Avon\", \"391\"], [\"HMS Atalanta\", \"225\"], [\"Bon Accord\", \"t\"], [\"Bacchus\", \"t\"]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["irena"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_2", "question": "What are the death and injury situations caused by the ship with tonnage 't'?", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'", "execution_result": "[[8, 0], [3, 0], [25, 0], [2, 0], [0, 0], [4, 5], [0, 0], [29, 0], [0, 0], [0, 0], [14, 0]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["ruwaidah", "irena", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_3", "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'", "execution_result": "[[\"Siege of Constantinople\", \"1235\"]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["irena", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_4", "question": "What are the ids and names of the battles that led to more than 10 people killed in total.", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10", "execution_result": "[[5, \"Battle of Messinopolis\"], [6, \"Battle of Boruy\"], [8, \"Siege of Constantinople\"]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["irena", "ruwaidah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_5", "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'", "execution_result": "[[8, \"Siege of Constantinople\"], [7, \"Battle of Philippopolis\"], [6, \"Battle of Boruy\"], [5, \"Battle of Messinopolis\"], [4, \"Battle of Rodosto\"]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["irena", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_6", "question": "List the name, date and result of each battle.", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT name ,  date FROM battle", "execution_result": "[[\"Battle of Adrianople\", \"14 April 1205\"], [\"Battle of Serres\", \"June 1205\"], [\"Battle of Rusion\", \"31 January 1206\"], [\"Battle of Rodosto\", \"February 1206\"], [\"Battle of Messinopolis\", \"4 September 1207\"], [\"Battle of Boruy\", \"June 1205\"], [\"Battle of Philippopolis\", \"31 June 1208\"], [\"Siege of Constantinople\", \"1235\"]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_7", "question": "How many battles did not lose any ship with tonnage '225'?", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );", "execution_result": "[[7]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["irena", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_8", "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'", "execution_result": "[[\"Battle of Adrianople\"]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_9", "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'", "execution_result": "[[\"Battle of Adrianople\", \"Bulgarian victory\", \"Kaloyan\"], [\"Battle of Rusion\", \"Bulgarian victory\", \"Kaloyan\"], [\"Battle of Serres\", \"Bulgarian victory\", \"Kaloyan\"]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["irena", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_10", "question": "How many ships ended up being 'Captured'?", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'", "execution_result": "[[4]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["irena"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_11", "question": "What is the average number of injuries caused each time?", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT avg(injured) FROM death", "execution_result": "[[1.0769230769230769]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["ruwaidah", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_12", "question": "What are the notes of the death events which has substring 'East'?", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT note FROM death WHERE note LIKE '%East%'", "execution_result": "[[\"East Champaran, Bihar\"]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["ruwaidah", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_13", "question": "What is the ship id and name that caused most total injuries?", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[5, \"Three Brothers\"]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["ruwaidah", "irena", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_14", "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'", "execution_result": "[[\"Battle of Adrianople\", \"Bulgarian victory\"], [\"Battle of Serres\", \"Bulgarian victory\"], [\"Battle of Rusion\", \"Bulgarian victory\"], [\"Battle of Rodosto\", \"Bulgarian victory\"], [\"Battle of Messinopolis\", \"Bulgarian victory\"], [\"Siege of Constantinople\", \"Two Year Truce\"]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "battle_death_15", "question": "What is maximum and minimum death toll caused each time?", "db_id": "battle_death", "table_names": ["battle", "ship", "death"], "gold_sql_query": "SELECT max(killed) ,  min(killed) FROM death", "execution_result": "[[29, 0]]", "tenant_id": "tenant_data_v2/battle_death", "reference_people": ["ruwaidah", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_0", "question": "Which department offers the most number of degrees? List department name and id.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"statistics\", 8]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["juan", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_1", "question": "What is the program id and the summary of the degree that has the most students enrolled?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[9, \"Bachelor\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["harpreet", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_2", "question": "What is the average transcript date?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT avg(transcript_date) FROM Transcripts", "execution_result": "[[1989.9333333333334]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_3", "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "execution_result": "[[\"Jarvis\", \"Aaliyah\", \"Carroll\", 4], [\"Reva\", \"Golda\", \"Osinski\", 9], [\"Jordy\", \"Osborne\", \"Rempel\", 14]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi", "harpreet"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_4", "question": "For each semester, what is the name and id of the one with the most students registered?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"summer 2010\", 2]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["harpreet", "maname"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_5", "question": "On average, when were the transcripts printed?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT avg(transcript_date) FROM Transcripts", "execution_result": "[[1989.9333333333334]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_6", "question": "What are the names and descriptions for all the sections?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT section_name ,  section_description FROM Sections", "execution_result": "[[\"a\", \"non\"], [\"b\", \"voluptatem\"], [\"c\", \"qui\"], [\"d\", \"voluptas\"], [\"e\", \"ex\"], [\"f\", \"doloremque\"], [\"g\", \"provident\"], [\"h\", \"et\"], [\"j\", \"quis\"], [\"k\", \"nesciunt\"], [\"l\", \"ad\"], [\"o\", \"et\"], [\"p\", \"facilis\"], [\"u\", \"reprehenderit\"], [\"y\", \"qui\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["ruwaidah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_7", "question": "What are the different addresses that have students living there?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(DISTINCT current_address_id) FROM Students", "execution_result": "[[9]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_8", "question": "What is the department description for the one whose name has the word computer?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "execution_result": "[[\"error\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["juan", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_9", "question": "How many courses are there?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(*) FROM Courses", "execution_result": "[[15]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_10", "question": "What is the date and id of the transcript with the least number of results?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "execution_result": "[[\"1975-10-28 15:16:51\", 2]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_11", "question": "What is the date and id of the transcript with at least 2 courses listed?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "execution_result": "[[\"2013-06-30 13:01:40\", 5], [\"2010-12-13 10:55:15\", 6], [\"1975-05-06 12:04:47\", 8], [\"1998-11-22 12:18:29\", 15]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_12", "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[4, 0]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_13", "question": "How many different departments offer degrees?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "execution_result": "[[10]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_14", "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'", "execution_result": "[[\"(096)889-8954x524\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_15", "question": "How is the math course described?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "execution_result": "[[\"q\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_16", "question": "Find the semester when both Master students and Bachelor students got enrolled in.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "execution_result": "[[13]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["harpreet", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_17", "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "execution_result": "[[\"Jarvis\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_18", "question": "Which address holds the most number of students currently? List the address id and all lines.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[9, \"0643 Muller Vista\", \"Suite 383\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_19", "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[7, \"Frida\", \"Aisha\", \"Huel\", 3, 7]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi", "harpreet"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_20", "question": "What is the zip code of the address in the city Port Chelsea?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "execution_result": "[[\"148\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_21", "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[4, 0]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_22", "question": "What is the id, line 1, and line 2 of the address with the most students?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[9, \"0643 Muller Vista\", \"Suite 383\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_23", "question": "What is the earliest date of a transcript release, and what details can you tell me?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "execution_result": "[[\"1975-05-06 12:04:47\", null]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_24", "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[7, \"Frida\", \"Aisha\", \"Huel\", 3, 7]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi", "harpreet"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_25", "question": "What is the degree summary name that has the most number of students enrolled?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"Bachelor\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["harpreet", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_26", "question": "List all the student details in reversed lexicographical order.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "execution_result": "[[\"voluptatem\"], [\"rerum\"], [\"quia\"], [\"qui\"], [\"omnis\"], [\"omnis\"], [\"non\"], [\"nesciunt\"], [\"laborum\"], [\"facilis\"], [\"et\"], [\"dolorum\"], [\"autem\"], [\"atque\"], [\"assumenda\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_27", "question": "How many transcripts are released?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(*) FROM Transcripts", "execution_result": "[[15]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_28", "question": "Which semesters do not have any student enrolled? List the semester name.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "execution_result": "[[\"fall 2010\"], [\"spring 2013\"], [\"spring 2014\"], [\"spring 2016\"], [\"spring 2017\"], [\"winter 2018\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["harpreet", "maname"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_29", "question": "When is the first transcript released? List the date and details.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1", "execution_result": "[[\"1975-05-06 12:04:47\", null]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_30", "question": "What is the zip code for Port Chelsea?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'", "execution_result": "[[\"148\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_31", "question": "How many courses in total are listed?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(*) FROM Courses", "execution_result": "[[15]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_32", "question": "What is the first and second line for all addresses?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT line_1 ,  line_2 FROM addresses", "execution_result": "[[\"2294 Grant Square Apt. 235\", \"Apt. 370\"], [\"3999 Aufderhar Ways Suite 593\", \"Apt. 388\"], [\"67942 Carlotta Ferry Apt. 686\", \"Apt. 583\"], [\"0144 Lamar Plaza Apt. 346\", \"Suite 703\"], [\"858 Peggie Bypass Suite 212\", \"Apt. 335\"], [\"16998 Mraz Lodge\", \"Apt. 689\"], [\"193 Marlin Brook\", \"Apt. 406\"], [\"202 Hessel Views Apt. 468\", \"Apt. 305\"], [\"0643 Muller Vista\", \"Suite 383\"], [\"7081 Eda Center\", \"Suite 830\"], [\"9283 Schulist Falls Apt. 037\", \"Suite 239\"], [\"979 Haag Shores Suite 656\", \"Apt. 468\"], [\"492 Wilkinson Route\", \"Suite 865\"], [\"186 Evan Motorway Apt. 409\", \"Suite 079\"], [\"74046 Metz Walk Apt. 113\", \"Suite 674\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_33", "question": "What is the name and id of the department with the most number of degrees ?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1", "execution_result": "[[\"statistics\", 8]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["juan", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_34", "question": "How many different degree names are offered?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_35", "question": "How many degrees does the engineering department offer?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["juan", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_36", "question": "What are the names and ids of every course with less than 2 sections?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "execution_result": "[[\"ds\", 1], [\"math\", 2], [\"en\", 4], [\"fr\", 5], [\"la\", 6], [\"cal\", 7], [\"nlp\", 8], [\"dl\", 9], [\"ml\", 10], [\"db\", 12], [\"pl\", 14]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["ruwaidah", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_37", "question": "How many degrees does the engineering department have?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'", "execution_result": "[[0]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["juan", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_38", "question": "Show the date and id of the transcript with at least 2 course results.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2", "execution_result": "[[\"2013-06-30 13:01:40\", 5], [\"2010-12-13 10:55:15\", 6], [\"1975-05-06 12:04:47\", 8], [\"1998-11-22 12:18:29\", 15]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_39", "question": "What are the names of the sections in reverse alphabetical order?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT section_name FROM Sections ORDER BY section_name DESC", "execution_result": "[[\"y\"], [\"u\"], [\"p\"], [\"o\"], [\"l\"], [\"k\"], [\"j\"], [\"h\"], [\"g\"], [\"f\"], [\"e\"], [\"d\"], [\"c\"], [\"b\"], [\"a\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["ruwaidah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_40", "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'", "execution_result": "[[\"Jarvis\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_41", "question": "What's the name of the course with most number of enrollments?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"rs\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_42", "question": "What is the first, middle, and last name of the first student to register?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "execution_result": "[[\"Timmothy\", \"Anna\", \"Ward\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_43", "question": "What is the last transcript release date?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "execution_result": "[[\"2013-06-30 13:01:40\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_44", "question": "What are the descriptions for all the math courses?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT course_description FROM Courses WHERE course_name  =  'math'", "execution_result": "[[\"q\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_45", "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "execution_result": "[[\"Gleichner\"], [\"Weimann\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["alice", "oubunmi", "harpreet"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_46", "question": "How many departments offer any degree?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(DISTINCT department_id) FROM Degree_Programs", "execution_result": "[[10]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_47", "question": "What is the mobile phone number of the student named Timmothy Ward ?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'", "execution_result": "[]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_48", "question": "Find the kind of program which most number of students are enrolled in?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"Bachelor\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["harpreet", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_49", "question": "Find the program which most number of students are enrolled in. List both the id and the summary.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[9, \"Bachelor\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["harpreet", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_50", "question": "How many transcripts are listed?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(*) FROM Transcripts", "execution_result": "[[15]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_51", "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id", "execution_result": "[[\"Gleichner\"], [\"Weimann\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["alice", "oubunmi", "harpreet"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_52", "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'", "execution_result": "[[13]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["harpreet", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_53", "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "execution_result": "[[\"Reva\", \"Golda\", \"Osinski\"], [\"Frida\", \"Aisha\", \"Huel\"], [\"Jarvis\", \"Aaliyah\", \"Carroll\"], [\"Milton\", \"Vaughn\", \"Christiansen\"], [\"Stanford\", \"Mona\", \"Rogahn\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi", "harpreet", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_54", "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'", "execution_result": "[[\"Reva\", \"Golda\", \"Osinski\"], [\"Frida\", \"Aisha\", \"Huel\"], [\"Jarvis\", \"Aaliyah\", \"Carroll\"], [\"Milton\", \"Vaughn\", \"Christiansen\"], [\"Stanford\", \"Mona\", \"Rogahn\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi", "harpreet", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_55", "question": "List the section_name in reversed lexicographical order.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT section_name FROM Sections ORDER BY section_name DESC", "execution_result": "[[\"y\"], [\"u\"], [\"p\"], [\"o\"], [\"l\"], [\"k\"], [\"j\"], [\"h\"], [\"g\"], [\"f\"], [\"e\"], [\"d\"], [\"c\"], [\"b\"], [\"a\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["ruwaidah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_56", "question": "What is the description for the section named h?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "execution_result": "[[\"et\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["ruwaidah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_57", "question": "When was the last transcript released?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1", "execution_result": "[[\"2013-06-30 13:01:40\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_58", "question": "What other details can you tell me about students in reverse alphabetical order?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC", "execution_result": "[[\"voluptatem\"], [\"rerum\"], [\"quia\"], [\"qui\"], [\"omnis\"], [\"omnis\"], [\"non\"], [\"nesciunt\"], [\"laborum\"], [\"facilis\"], [\"et\"], [\"dolorum\"], [\"autem\"], [\"atque\"], [\"assumenda\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_59", "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "execution_result": "[[\"Timmothy\", \"Anna\", \"Ward\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_60", "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2", "execution_result": "[[\"Jarvis\", \"Aaliyah\", \"Carroll\", 4], [\"Reva\", \"Golda\", \"Osinski\", 9], [\"Jordy\", \"Osborne\", \"Rempel\", 14]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi", "harpreet"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_61", "question": "How many different degrees are offered?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_62", "question": "What are the names and id of courses having at most 2 sections?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2", "execution_result": "[[\"ds\", 1], [\"math\", 2], [\"en\", 4], [\"fr\", 5], [\"la\", 6], [\"cal\", 7], [\"nlp\", 8], [\"dl\", 9], [\"ml\", 10], [\"db\", 12], [\"pl\", 14]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["ruwaidah", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_63", "question": "Show the date of the transcript which shows the least number of results, also list the id.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1", "execution_result": "[[\"1975-10-28 15:16:51\", 2]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["hannah", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_64", "question": "what are all the addresses including line 1 and line 2?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT line_1 ,  line_2 FROM addresses", "execution_result": "[[\"2294 Grant Square Apt. 235\", \"Apt. 370\"], [\"3999 Aufderhar Ways Suite 593\", \"Apt. 388\"], [\"67942 Carlotta Ferry Apt. 686\", \"Apt. 583\"], [\"0144 Lamar Plaza Apt. 346\", \"Suite 703\"], [\"858 Peggie Bypass Suite 212\", \"Apt. 335\"], [\"16998 Mraz Lodge\", \"Apt. 689\"], [\"193 Marlin Brook\", \"Apt. 406\"], [\"202 Hessel Views Apt. 468\", \"Apt. 305\"], [\"0643 Muller Vista\", \"Suite 383\"], [\"7081 Eda Center\", \"Suite 830\"], [\"9283 Schulist Falls Apt. 037\", \"Suite 239\"], [\"979 Haag Shores Suite 656\", \"Apt. 468\"], [\"492 Wilkinson Route\", \"Suite 865\"], [\"186 Evan Motorway Apt. 409\", \"Suite 079\"], [\"74046 Metz Walk Apt. 113\", \"Suite 674\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_65", "question": "Describe the section h.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT section_description FROM Sections WHERE section_name  =  'h'", "execution_result": "[[\"et\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["ruwaidah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_66", "question": "What are all the course names of the courses which ever have students enrolled in?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "execution_result": "[[\"la\"], [\"pl\"], [\"ai\"], [\"math\"], [\"ml\"], [\"os\"], [\"en\"], [\"nlp\"], [\"rs\"], [\"db\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_67", "question": "What is the semester which most student registered in? Show both the name and the id.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"summer 2010\", 2]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["harpreet", "maname"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_68", "question": "Who is the first student to register? List the first name, middle name and last name.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1", "execution_result": "[[\"Timmothy\", \"Anna\", \"Ward\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_69", "question": "What is the first name of the student whose permanent address is different from his or her current one?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "execution_result": "[[\"Timmothy\"], [\"Hobart\"], [\"Warren\"], [\"Jarvis\"], [\"Stanford\"], [\"Frida\"], [\"Delaney\"], [\"Reva\"], [\"Helga\"], [\"Gregg\"], [\"Orrin\"], [\"Deon\"], [\"Jordy\"], [\"Jett\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_70", "question": "What is the description of the department whose name has the substring the computer?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'", "execution_result": "[[\"error\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["juan", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_71", "question": "What are the names and descriptions of all the sections?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT section_name ,  section_description FROM Sections", "execution_result": "[[\"a\", \"non\"], [\"b\", \"voluptatem\"], [\"c\", \"qui\"], [\"d\", \"voluptas\"], [\"e\", \"ex\"], [\"f\", \"doloremque\"], [\"g\", \"provident\"], [\"h\", \"et\"], [\"j\", \"quis\"], [\"k\", \"nesciunt\"], [\"l\", \"ad\"], [\"o\", \"et\"], [\"p\", \"facilis\"], [\"u\", \"reprehenderit\"], [\"y\", \"qui\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["ruwaidah"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_72", "question": "How many different addresses do the students currently live?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT count(DISTINCT current_address_id) FROM Students", "execution_result": "[[9]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_73", "question": "What is the name of the semester with no students enrolled?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )", "execution_result": "[[\"fall 2010\"], [\"spring 2013\"], [\"spring 2014\"], [\"spring 2016\"], [\"spring 2017\"], [\"winter 2018\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["harpreet", "maname"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_74", "question": "What is the first, middle, and last name of the earliest school graduate?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1", "execution_result": "[[\"Timmothy\", \"Anna\", \"Ward\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_75", "question": "What is the name of the course with the most students enrolled?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"rs\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_76", "question": "Whose permanent address is different from his or her current address? List his or her first name.", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id", "execution_result": "[[\"Timmothy\"], [\"Hobart\"], [\"Warren\"], [\"Jarvis\"], [\"Stanford\"], [\"Frida\"], [\"Delaney\"], [\"Reva\"], [\"Helga\"], [\"Gregg\"], [\"Orrin\"], [\"Deon\"], [\"Jordy\"], [\"Jett\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["oubunmi"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "student_transcripts_tracking_77", "question": "What are the names of all courses that have some students enrolled?", "db_id": "student_transcripts_tracking", "table_names": ["addresses", "courses", "departments", "degree programs", "sections", "semesters", "students", "student enrolment", "student enrolment courses", "transcripts", "transcript contents"], "gold_sql_query": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id", "execution_result": "[[\"la\"], [\"pl\"], [\"ai\"], [\"math\"], [\"ml\"], [\"os\"], [\"en\"], [\"nlp\"], [\"rs\"], [\"db\"]]", "tenant_id": "tenant_data_v2/student_transcripts_tracking", "reference_people": ["gorosti", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_0", "question": "List each language and the number of TV Channels using it.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "execution_result": "[[\"English\", 3], [\"Italian\", 12]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_1", "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "execution_result": "[[\"Sky Famiglia\"], [\"Sky Famiglia\"], [\"Sky Famiglia\"], [\"Sky Famiglia\"], [\"no ( FTV )\"], [\"Sky Famiglia + Sky HD\"], [\"no ( FTV )\"], [\"Sky Famiglia\"], [\"Sky Famiglia\"], [\"Sky Famiglia\"], [\"Sky Famiglia\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_2", "question": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "execution_result": "[[\"The Rise of the Blue Beetle!\"], [\"Return of the Fearsome Fangs!\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_3", "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "execution_result": "[[\"Sky Famiglia + Sky HD\", \"MTV Live HD\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_4", "question": "List all cartoon directed by \"Ben Jones\".", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "execution_result": "[[\"The Rise of the Blue Beetle!\"], [\"Day of the Dark Knight!\"], [\"Dawn of the Dead Man!\"], [\"The Eyes of Despero!\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_5", "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "execution_result": "[[\"Sky Radio\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_6", "question": "What is the name and directors of all the cartoons that are ordered by air date?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "execution_result": "[[\"Invasion of the Secret Santas!\", \"Brandon Vietti\"], [\"Evil Under the Sea!\", \"Michael Chang\"], [\"Return of the Fearsome Fangs!\", \"Brandon Vietti\"], [\"Deep Cover for Batman!\", \"Michael Chang\"], [\"The Eyes of Despero!\", \"Ben Jones\"], [\"Dawn of the Dead Man!\", \"Ben Jones\"], [\"Day of the Dark Knight!\", \"Ben Jones\"], [\"Fall of the Blue Beetle!\", \"Brandon Vietti\"], [\"Journey to the Center of the Bat!\", \"Michael Chang\"], [\"Enter the Outsiders!\", \"Michael Chang\"], [\"The Rise of the Blue Beetle!\", \"Ben Jones\"], [\"Terror on Dinosaur Island!\", \"Brandon Vietti\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_7", "question": "What are the names of all cartoons directed by Ben Jones?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";", "execution_result": "[[\"The Rise of the Blue Beetle!\"], [\"Day of the Dark Knight!\"], [\"Dawn of the Dead Man!\"], [\"The Eyes of Despero!\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_8", "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "execution_result": "[[\"MTV Dance\", \"United Kingdom\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_9", "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "execution_result": "[[43.0]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_10", "question": "What is the country with the most number of TV Channels and how many does it have?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "execution_result": "[[\"Italy\", 12]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_11", "question": "For each language, list the number of TV Channels that use it.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE", "execution_result": "[[\"English\", 3], [\"Italian\", 12]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_12", "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "execution_result": "[[\"The Rise of the Blue Beetle!\"], [\"Return of the Fearsome Fangs!\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_13", "question": "What are the countries that are not playing cartoons written by Todd Casey?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "execution_result": "[[\"Poland\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_14", "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";", "execution_result": "[[\"Sky Radio\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_15", "question": "How many TV Channels use the English language?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_16", "question": "How many cartoons did each director create?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "execution_result": "[[4, \"Ben Jones\"], [4, \"Brandon Vietti\"], [4, \"Michael Chang\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_17", "question": "What is the episode for the TV series named \"Sky Radio\"?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "execution_result": "[[\"A Love of a Lifetime\"], [\"Keepers\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_18", "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "execution_result": "[[\"Poland\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_19", "question": "List the title of all cartoons in alphabetical order.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Title FROM Cartoon ORDER BY title", "execution_result": "[[\"Dawn of the Dead Man!\"], [\"Day of the Dark Knight!\"], [\"Deep Cover for Batman!\"], [\"Enter the Outsiders!\"], [\"Evil Under the Sea!\"], [\"Fall of the Blue Beetle!\"], [\"Invasion of the Secret Santas!\"], [\"Journey to the Center of the Bat!\"], [\"Return of the Fearsome Fangs!\"], [\"Terror on Dinosaur Island!\"], [\"The Eyes of Despero!\"], [\"The Rise of the Blue Beetle!\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_20", "question": "Find the production code and channel of the most recently aired cartoon .", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1", "execution_result": "[[102.0, \"701\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_21", "question": "List the number of different series names and contents in the TV Channel table.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "execution_result": "[[15, 1]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_22", "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "execution_result": "[[\"Sky Radio\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_23", "question": "list all cartoon titles and their directors ordered by their air date", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date", "execution_result": "[[\"Invasion of the Secret Santas!\", \"Brandon Vietti\"], [\"Evil Under the Sea!\", \"Michael Chang\"], [\"Return of the Fearsome Fangs!\", \"Brandon Vietti\"], [\"Deep Cover for Batman!\", \"Michael Chang\"], [\"The Eyes of Despero!\", \"Ben Jones\"], [\"Dawn of the Dead Man!\", \"Ben Jones\"], [\"Day of the Dark Knight!\", \"Ben Jones\"], [\"Fall of the Blue Beetle!\", \"Brandon Vietti\"], [\"Journey to the Center of the Bat!\", \"Michael Chang\"], [\"Enter the Outsiders!\", \"Michael Chang\"], [\"The Rise of the Blue Beetle!\", \"Ben Jones\"], [\"Terror on Dinosaur Island!\", \"Brandon Vietti\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_24", "question": "What are the titles of the cartoons sorted alphabetically?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Title FROM Cartoon ORDER BY title", "execution_result": "[[\"Dawn of the Dead Man!\"], [\"Day of the Dark Knight!\"], [\"Deep Cover for Batman!\"], [\"Enter the Outsiders!\"], [\"Evil Under the Sea!\"], [\"Fall of the Blue Beetle!\"], [\"Invasion of the Secret Santas!\"], [\"Journey to the Center of the Bat!\"], [\"Return of the Fearsome Fangs!\"], [\"Terror on Dinosaur Island!\"], [\"The Eyes of Despero!\"], [\"The Rise of the Blue Beetle!\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_25", "question": "What are all of the episodes ordered by ratings?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Episode FROM TV_series ORDER BY rating", "execution_result": "[[\"The Hanged Man\"], [\"Double Down\"], [\"Home By Another Way\"], [\"Keepers\"], [\"Emily\"], [\"Blowback\"], [\"The Legend of Dylan McCleen\"], [\"Winterland\"], [\"The Year of the Rabbit\"], [\"Game Three\"], [\"Friendly Skies\"], [\"A Love of a Lifetime\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_26", "question": "When did the episode \"A Love of a Lifetime\" air?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "execution_result": "[[\"September 24, 2007\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_27", "question": "Find the number of cartoons directed by each of the listed directors.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by", "execution_result": "[[4, \"Ben Jones\"], [4, \"Brandon Vietti\"], [4, \"Michael Chang\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_28", "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;", "execution_result": "[[\"Italy\", 12]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_29", "question": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "execution_result": "[[\"A Love of a Lifetime\", \"5.8\"], [\"Friendly Skies\", \"5.3\"], [\"Game Three\", \"4.4\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_30", "question": "What is minimum and maximum share of TV series?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "execution_result": "[[9.0, 5.0]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_31", "question": "Find the package choice and series name of the TV channel that has high definition TV.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"", "execution_result": "[[\"Sky Famiglia + Sky HD\", \"MTV Live HD\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_32", "question": "How many different series and contents are listed in the TV Channel table?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;", "execution_result": "[[15, 1]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_33", "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "execution_result": "[[43.0]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_34", "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";", "execution_result": "[[\"Sky Radio\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_35", "question": "What is the content of TV Channel with serial name \"Sky Radio\"?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "execution_result": "[[\"music\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_36", "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "execution_result": "[[\"The Rise of the Blue Beetle!\"], [\"Terror on Dinosaur Island!\"], [\"Day of the Dark Knight!\"], [\"Invasion of the Secret Santas!\"], [\"Dawn of the Dead Man!\"], [\"Fall of the Blue Beetle!\"], [\"The Eyes of Despero!\"], [\"Return of the Fearsome Fangs!\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_37", "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";", "execution_result": "[[\"The Rise of the Blue Beetle!\"], [\"Terror on Dinosaur Island!\"], [\"Day of the Dark Knight!\"], [\"Invasion of the Secret Santas!\"], [\"Dawn of the Dead Man!\"], [\"Fall of the Blue Beetle!\"], [\"The Eyes of Despero!\"], [\"Return of the Fearsome Fangs!\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_38", "question": "What is the number of cartoones written by Joseph Kuhr?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_39", "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";", "execution_result": "[[\"September 24, 2007\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_40", "question": "List the language used least number of TV Channel. List language and number of TV Channel.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "execution_result": "[[\"English\", 3]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_41", "question": "What are the languages used by the least number of TV Channels and how many channels use it?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;", "execution_result": "[[\"English\", 3]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_42", "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "execution_result": "[[\"701\"], [\"703\"], [\"705\"], [\"706\"], [\"708\"], [\"709\"], [\"713\"], [\"714\"], [\"715\"], [\"717\"], [\"719\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_43", "question": "What are the ids of all tv channels that have more than 2 TV channels?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "execution_result": "[[\"700\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_44", "question": "How many TV Channel using language English?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_45", "question": "What is the produdction code and channel of the most recent cartoon ?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "select production_code ,  channel from cartoon order by original_air_date desc limit 1", "execution_result": "[[102.0, \"701\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_46", "question": "How many cartoons were written by \"Joseph Kuhr\"?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_47", "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')", "execution_result": "[[\"Sky Famiglia\"], [\"Sky Famiglia\"], [\"Sky Famiglia\"], [\"Sky Famiglia\"], [\"no ( FTV )\"], [\"Sky Famiglia + Sky HD\"], [\"no ( FTV )\"], [\"Sky Famiglia\"], [\"Sky Famiglia\"], [\"Sky Famiglia\"], [\"Sky Famiglia\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_48", "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "execution_result": "[[\"4:3\", \"Italy\"], [\"4:3\", \"Italy\"], [\"4:3 / 16:9\", \"Italy\"], [\"16:9\", \"Italy\"], [\"4:3\", \"Italy\"], [\"16:9\", \"Italy\"], [\"4:3\", \"Italy\"], [\"16:9\", \"Italy\"], [\"4:3 / 16:9\", \"Italy\"], [\"4:3 / 16:9\", \"Italy\"], [\"4:3\", \"Italy\"], [\"4:3\", \"Italy\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_49", "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'", "execution_result": "[[\"701\"], [\"703\"], [\"705\"], [\"706\"], [\"708\"], [\"709\"], [\"713\"], [\"714\"], [\"715\"], [\"717\"], [\"719\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_50", "question": "find id of the tv channels that from the countries where have more than two tv channels.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2", "execution_result": "[[\"700\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_51", "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;", "execution_result": "[[\"A Love of a Lifetime\", \"5.8\"], [\"Friendly Skies\", \"5.3\"], [\"Game Three\", \"4.4\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_52", "question": "What is the maximum and minimum share for the TV series?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT max(SHARE) , min(SHARE) FROM TV_series;", "execution_result": "[[9.0, 5.0]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_53", "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'", "execution_result": "[[\"4:3\", \"Italy\"], [\"4:3\", \"Italy\"], [\"4:3 / 16:9\", \"Italy\"], [\"16:9\", \"Italy\"], [\"4:3\", \"Italy\"], [\"16:9\", \"Italy\"], [\"4:3\", \"Italy\"], [\"16:9\", \"Italy\"], [\"4:3 / 16:9\", \"Italy\"], [\"4:3 / 16:9\", \"Italy\"], [\"4:3\", \"Italy\"], [\"4:3\", \"Italy\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_54", "question": "What are the countries that have cartoons on TV that were written by Todd Casey?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "execution_result": "[[\"United Kingdom\"], [\"Italy\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_55", "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "execution_result": "[[\"Sky Famiglia\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_56", "question": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";", "execution_result": "[[\"A Love of a Lifetime\"], [\"Keepers\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_57", "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'", "execution_result": "[[\"MTV Dance\", \"United Kingdom\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_58", "question": "What is the content of the series Sky Radio?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";", "execution_result": "[[\"music\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_59", "question": "which countries' tv channels are playing some cartoon written by Todd Casey?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'", "execution_result": "[[\"United Kingdom\"], [\"Italy\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice", "niks", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_60", "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";", "execution_result": "[[\"Sky Famiglia\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "tvshow_61", "question": "List the Episode of all TV series sorted by rating.", "db_id": "tvshow", "table_names": ["tv channel", "tv series", "cartoon"], "gold_sql_query": "SELECT Episode FROM TV_series ORDER BY rating", "execution_result": "[[\"The Hanged Man\"], [\"Double Down\"], [\"Home By Another Way\"], [\"Keepers\"], [\"Emily\"], [\"Blowback\"], [\"The Legend of Dylan McCleen\"], [\"Winterland\"], [\"The Year of the Rabbit\"], [\"Game Three\"], [\"Friendly Skies\"], [\"A Love of a Lifetime\"]]", "tenant_id": "tenant_data_v2/tvshow", "reference_people": ["parker", "lina"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_0", "question": "What is the average earnings of poker players with height higher than 200?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "execution_result": "[[309445.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_1", "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "execution_result": "[[\"Teodor Salparov\"], [\"Maksim Botin\"], [\"Yevgeni Sivozhelez\"], [\"Semen Poltavskiy\"], [\"Aleksey Ostapenko\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_2", "question": "List the final tables made and the best finishes of poker players.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "execution_result": "[[42.0, 1.0], [10.0, 2.0], [21.0, 1.0], [19.0, 2.0], [26.0, 3.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_3", "question": "What are the names of poker players in descending order of earnings?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "execution_result": "[[\"Maksim Botin\"], [\"Aleksey Ostapenko\"], [\"Teodor Salparov\"], [\"Semen Poltavskiy\"], [\"Yevgeni Sivozhelez\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_4", "question": "Return the average earnings across all poker players.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT avg(Earnings) FROM poker_player", "execution_result": "[[301891.2]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_5", "question": "List the names of people that are not poker players.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "execution_result": "[[\"Roman Bragin\"], [\"Sergey Grankin\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_6", "question": "Return the money rank of the player with the greatest earnings.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "execution_result": "[[58.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_7", "question": "Return the birth date of the poker player with the lowest earnings.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "execution_result": "[[\"August 8, 1986\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_8", "question": "Return the money rank of the poker player with the greatest height.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "execution_result": "[[68.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_9", "question": "Return the nationalities for which there are two or more people.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "execution_result": "[[\"Russia\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_10", "question": "What are the earnings of poker players, ordered descending by value?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "execution_result": "[[596462.0], [476090.0], [189233.0], [142800.0], [104871.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_11", "question": "What are the nationalities that are shared by at least two people?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2", "execution_result": "[[\"Russia\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_12", "question": "List the names of poker players ordered by the final tables made in ascending order.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made", "execution_result": "[[\"Teodor Salparov\"], [\"Maksim Botin\"], [\"Yevgeni Sivozhelez\"], [\"Semen Poltavskiy\"], [\"Aleksey Ostapenko\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_13", "question": "What is the birth date of the poker player with the lowest earnings?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1", "execution_result": "[[\"August 8, 1986\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_14", "question": "Return the maximum final tables made across all poker players who have earnings below 200000.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "execution_result": "[[26.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_15", "question": "How many poker players are there?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT count(*) FROM poker_player", "execution_result": "[[5]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_16", "question": "Give the names of poker players who have earnings above 300000.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "execution_result": "[[\"Aleksey Ostapenko\"], [\"Maksim Botin\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_17", "question": "List the earnings of poker players in descending order.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC", "execution_result": "[[596462.0], [476090.0], [189233.0], [142800.0], [104871.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_18", "question": "What is the money rank of the tallest poker player?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1", "execution_result": "[[68.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_19", "question": "Return the names of all the poker players.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "execution_result": "[[\"Aleksey Ostapenko\"], [\"Teodor Salparov\"], [\"Yevgeni Sivozhelez\"], [\"Maksim Botin\"], [\"Semen Poltavskiy\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_20", "question": "What is the most common nationality of people?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "execution_result": "[[\"Russia\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_21", "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "execution_result": "[[\"Aleksey Ostapenko\", \"May 26, 1986\"], [\"Maksim Botin\", \"July 14, 1983\"], [\"Roman Bragin\", \"April 17, 1987\"], [\"Semen Poltavskiy\", \"February 8, 1981\"], [\"Sergey Grankin\", \"January 22, 1987\"], [\"Teodor Salparov\", \"August 16, 1982\"], [\"Yevgeni Sivozhelez\", \"August 8, 1986\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_22", "question": "Give average earnings of poker players who are taller than 200.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200", "execution_result": "[[309445.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_23", "question": "What are different nationalities of people and the corresponding number of people from each nation?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "execution_result": "[[\"Bulgaria\", 1], [\"Russia\", 6]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_24", "question": "What are the names of poker players whose earnings is higher than 300000?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000", "execution_result": "[[\"Aleksey Ostapenko\"], [\"Maksim Botin\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_25", "question": "What is the average earnings of poker players?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT avg(Earnings) FROM poker_player", "execution_result": "[[301891.2]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_26", "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000", "execution_result": "[[26.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_27", "question": "What are the names of poker players?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID", "execution_result": "[[\"Aleksey Ostapenko\"], [\"Teodor Salparov\"], [\"Yevgeni Sivozhelez\"], [\"Maksim Botin\"], [\"Semen Poltavskiy\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_28", "question": "List the names and birth dates of people in ascending alphabetical order of name.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC", "execution_result": "[[\"Aleksey Ostapenko\", \"May 26, 1986\"], [\"Maksim Botin\", \"July 14, 1983\"], [\"Roman Bragin\", \"April 17, 1987\"], [\"Semen Poltavskiy\", \"February 8, 1981\"], [\"Sergey Grankin\", \"January 22, 1987\"], [\"Teodor Salparov\", \"August 16, 1982\"], [\"Yevgeni Sivozhelez\", \"August 8, 1986\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_29", "question": "What are the names of people who are not from Russia?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "execution_result": "[[\"Teodor Salparov\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_30", "question": "How many distinct nationalities are there?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT count(DISTINCT Nationality) FROM people", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_31", "question": "Give the nationality that is most common across all people.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "execution_result": "[[\"Russia\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_32", "question": "Count the number of different nationalities.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT count(DISTINCT Nationality) FROM people", "execution_result": "[[2]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_33", "question": "How many people are there of each nationality?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality", "execution_result": "[[\"Bulgaria\", 1], [\"Russia\", 6]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_34", "question": "What are the final tables made and best finishes for all poker players?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player", "execution_result": "[[42.0, 1.0], [10.0, 2.0], [21.0, 1.0], [19.0, 2.0], [26.0, 3.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_35", "question": "What are the names of people who do not play poker?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)", "execution_result": "[[\"Roman Bragin\"], [\"Sergey Grankin\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_36", "question": "Return the names of poker players sorted by their earnings descending.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC", "execution_result": "[[\"Maksim Botin\"], [\"Aleksey Ostapenko\"], [\"Teodor Salparov\"], [\"Semen Poltavskiy\"], [\"Yevgeni Sivozhelez\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "alice", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_37", "question": "Count the number of poker players.", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT count(*) FROM poker_player", "execution_result": "[[5]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_38", "question": "Show names of people whose nationality is not \"Russia\".", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Name FROM people WHERE Nationality != \"Russia\"", "execution_result": "[[\"Teodor Salparov\"]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["tulga", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "poker_player_39", "question": "What is the money rank of the poker player with the highest earnings?", "db_id": "poker_player", "table_names": ["poker player", "people"], "gold_sql_query": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1", "execution_result": "[[58.0]]", "tenant_id": "tenant_data_v2/poker_player", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_0", "question": "Return the names of the contestants whose names contain the substring 'Al' .", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "select contestant_name from contestants where contestant_name like \"%al%\"", "execution_result": "[[\"Jessie Alloway\"], [\"Alana Bregman\"], [\"Allie Rogalski\"], [\"Kurt Walser\"]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["hannah", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_1", "question": "What are the distinct states and create time of all votes?", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT DISTINCT state ,  created FROM votes", "execution_result": "[[\"NY\", \"2018-03-09 19:03:21\"], [\"NY\", \"2018-03-09 19:03:36\"], [\"CA\", \"2018-03-09 19:03:39\"], [\"NJ\\n\", \"2018-03-09 19:03:40\"]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["gorosti", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_2", "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1", "execution_result": "[[2, \"Tabatha Gehling\"]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["gorosti", "hannah", "tulga", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_3", "question": "How many contestants did not get voted?", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )", "execution_result": "[[8]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["gorosti", "hannah", "tulga", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_4", "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'", "execution_result": "[[\"2018-03-09 19:03:21\", \"NY\", 7182887233]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["gorosti", "hannah", "tulga", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_5", "question": "How many states are there?", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT count(*) FROM area_code_state", "execution_result": "[[305]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_6", "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'", "execution_result": "[[212], [315], [347], [516], [518], [585], [607], [631], [646], [716], [718], [845], [914], [917]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["tulga", "gorosti", "hannah", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_7", "question": "What are the number of votes from state 'NY' or 'CA'?", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["gorosti", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_8", "question": "List the contestant numbers and names, ordered by contestant name descending.", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC", "execution_result": "[[2, \"Tabatha Gehling\"], [8, \"Nita Coster\"], [11, \"Loraine NygrenTania Mattioli\"], [9, \"Kurt Walser\"], [3, \"Kelly Clauss\"], [6, \"Jessie Eichman\"], [4, \"Jessie Alloway\"], [10, \"Ericka Dieter\"], [1, \"Edwina Burnam\"], [7, \"Allie Rogalski\"], [5, \"Alana Bregman\"]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["hannah", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_9", "question": "List the vote ids, phone numbers and states of all votes.", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT vote_id ,  phone_number ,  state FROM votes", "execution_result": "[[1, 7182887233, \"NY\"], [2, 7148407040, \"NY\"], [3, 6209222712, \"CA\"], [5, 5112677315, \"NJ\\n\"]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["gorosti", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_10", "question": "What are the names of the contestants whose names are not 'Jessie Alloway'", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'", "execution_result": "[[\"Edwina Burnam\"], [\"Tabatha Gehling\"], [\"Kelly Clauss\"], [\"Alana Bregman\"], [\"Jessie Eichman\"], [\"Allie Rogalski\"], [\"Nita Coster\"], [\"Kurt Walser\"], [\"Ericka Dieter\"], [\"Loraine NygrenTania Mattioli\"]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["hannah", "tulga"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_11", "question": "What is last date created of votes from the state 'CA'?", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT max(created) FROM votes WHERE state  =  'CA'", "execution_result": "[[\"2018-03-09 19:03:39\"]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["gorosti", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_12", "question": "What is the area code in which the most voters voted?", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[212]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["gorosti", "alice", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_13", "question": "What are the contestant numbers and names of the contestants who had at least two votes?", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2", "execution_result": "[[3, \"Kelly Clauss\"]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["gorosti", "hannah", "tulga", "bhushan"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "voter_1_14", "question": "What are the maximum and minimum values of area codes?", "db_id": "voter_1", "table_names": ["area code state", "contestants", "votes"], "gold_sql_query": "SELECT max(area_code) ,  min(area_code) FROM area_code_state", "execution_result": "[[989, 201]]", "tenant_id": "tenant_data_v2/voter_1", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_0", "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "execution_result": "[[\"Igor Stravinsky\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_1", "question": "Show the names of conductors and the orchestras they have conducted.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "execution_result": "[[\"Antal Dor\\u00e1ti\", \"London Symphony Orchestra\"], [\"Igor Stravinsky\", \"Columbia Symphony Orchestra\"], [\"Colin Davis\", \"Royal Concertgebouw Orchestra\"], [\"Paul Jorgensen\", \"Royal Danish Orchestra\"], [\"Antal Brown\", \"Detroit Symphony Orchestra\"], [\"Charles Dutoit\", \"Montreal Symphony Orchestra\"], [\"Gerard Schwarz\", \"Seattle Symphony Orchestra\"], [\"Pierre Boulez\", \"Chicago Symphony Orchestra\"], [\"Valeri Gergiev\", \"Kirov Orchestra\"], [\"Robert Craft\", \"Philharmonia Orchestra\"], [\"Seiji Ozawa\", \"Orchestre de Paris\"], [\"Michael Tilson Thomas\", \"San Francisco Symphony Orchestra\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_2", "question": "Please show the record formats of orchestras in ascending order of count.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "execution_result": "[[\"CD / LP\"], [\"DVD\"], [\"CD\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_3", "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "execution_result": "[[\"Decca Records\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_4", "question": "What are the orchestras that do not have any performances?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "execution_result": "[[\"San Francisco Symphony Orchestra\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "bhushan", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_5", "question": "Count the number of conductors.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT count(*) FROM conductor", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_6", "question": "What are the names of conductors who have conducted at more than one orchestra?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "execution_result": "[]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_7", "question": "What is the name of the conductor who has worked the greatest number of years?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "execution_result": "[[\"Robert Craft\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_8", "question": "Show the years in which orchestras that have given more than one performance are founded.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "execution_result": "[]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "bhushan", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_9", "question": "What are years of founding for orchestras that have had more than a single performance?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1", "execution_result": "[]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "bhushan", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_10", "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003", "execution_result": "[[\"Decca Records\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_11", "question": "Count the number of orchestras that have CD or DVD as their record format.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "execution_result": "[[11]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_12", "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008", "execution_result": "[[\"Igor Stravinsky\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_13", "question": "How many different nationalities do conductors have?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT count(DISTINCT Nationality) FROM conductor", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_14", "question": "Return the average attendance across all shows.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT avg(Attendance) FROM SHOW", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/orchestra", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "orchestra_15", "question": "What is the average attendance of shows?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT avg(Attendance) FROM SHOW", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/orchestra", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "orchestra_16", "question": "List the record company shared by the most number of orchestras.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "execution_result": "[[\"Decca Records\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_17", "question": "Return the names of conductors that do not have the nationality \"USA\".", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "execution_result": "[[\"Igor Stravinsky\"], [\"Paul Jorgensen\"], [\"Charles Dutoit\"], [\"Pierre Boulez\"], [\"Robert Craft\"], [\"Michael Tilson Thomas\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_18", "question": "List the names of orchestras that have no performance.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)", "execution_result": "[[\"San Francisco Symphony Orchestra\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "bhushan", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_19", "question": "What is the record company used by the greatest number of orchestras?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1", "execution_result": "[[\"Decca Records\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_20", "question": "List names of conductors in descending order of years of work.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "execution_result": "[[\"Robert Craft\"], [\"Antal Brown\"], [\"Gerard Schwarz\"], [\"Valeri Gergiev\"], [\"Charles Dutoit\"], [\"Michael Tilson Thomas\"], [\"Igor Stravinsky\"], [\"Paul Jorgensen\"], [\"Pierre Boulez\"], [\"Antal Dor\\u00e1ti\"], [\"Seiji Ozawa\"], [\"Colin Davis\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_21", "question": "What are the major record formats of orchestras, sorted by their frequency?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC", "execution_result": "[[\"CD / LP\"], [\"DVD\"], [\"CD\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_22", "question": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "execution_result": "[[\"44.7%\", \"22.7%\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["bhushan", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_23", "question": "Please show the different record companies and the corresponding number of orchestras.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "execution_result": "[[\"Columbia Masterworks\", 1], [\"Decca Records\", 2], [\"Delos Records\", 1], [\"Deutsche Grammophon\", 1], [\"EMI\", 1], [\"Koch Records / Naxos Records\", 1], [\"Kultur\", 1], [\"Mercury Records\", 1], [\"Philips\", 1], [\"Philips Classics Records\", 1], [\"RCA\", 1]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_24", "question": "What are the names of conductors, ordered by age?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Name FROM conductor ORDER BY Age ASC", "execution_result": "[[\"Antal Dor\\u00e1ti\"], [\"Igor Stravinsky\"], [\"Colin Davis\"], [\"Michael Tilson Thomas\"], [\"Paul Jorgensen\"], [\"Antal Brown\"], [\"Charles Dutoit\"], [\"Seiji Ozawa\"], [\"Valeri Gergiev\"], [\"Pierre Boulez\"], [\"Gerard Schwarz\"], [\"Robert Craft\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_25", "question": "What are the names of conductors, sorted descending by the number of years they have worked?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC", "execution_result": "[[\"Robert Craft\"], [\"Antal Brown\"], [\"Gerard Schwarz\"], [\"Valeri Gergiev\"], [\"Charles Dutoit\"], [\"Michael Tilson Thomas\"], [\"Igor Stravinsky\"], [\"Paul Jorgensen\"], [\"Pierre Boulez\"], [\"Antal Dor\\u00e1ti\"], [\"Seiji Ozawa\"], [\"Colin Davis\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_26", "question": "Count the number of different nationalities of conductors.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT count(DISTINCT Nationality) FROM conductor", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_27", "question": "How many conductors are there?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT count(*) FROM conductor", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_28", "question": "What are the maximum and minimum share of performances whose type is not \"Live final\".", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"", "execution_result": "[[\"44.7%\", \"22.7%\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["bhushan", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_29", "question": "Show the names of conductors that have conducted more than one orchestras.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1", "execution_result": "[]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_30", "question": "List the name of the conductor with the most years of work.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1", "execution_result": "[[\"Robert Craft\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_31", "question": "What are the names of conductors whose nationalities are not \"USA\"?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Name FROM conductor WHERE Nationality != 'USA'", "execution_result": "[[\"Igor Stravinsky\"], [\"Paul Jorgensen\"], [\"Charles Dutoit\"], [\"Pierre Boulez\"], [\"Robert Craft\"], [\"Michael Tilson Thomas\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_32", "question": "What is the name of the conductor who has conducted the most orchestras?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "execution_result": "[[\"Michael Tilson Thomas\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_33", "question": "How many orchestras does each record company manage?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company", "execution_result": "[[\"Columbia Masterworks\", 1], [\"Decca Records\", 2], [\"Delos Records\", 1], [\"Deutsche Grammophon\", 1], [\"EMI\", 1], [\"Koch Records / Naxos Records\", 1], [\"Kultur\", 1], [\"Mercury Records\", 1], [\"Philips\", 1], [\"Philips Classics Records\", 1], [\"RCA\", 1]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_34", "question": "Show the name of the conductor that has conducted the most number of orchestras.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1", "execution_result": "[[\"Michael Tilson Thomas\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_35", "question": "List the names of conductors in ascending order of age.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Name FROM conductor ORDER BY Age ASC", "execution_result": "[[\"Antal Dor\\u00e1ti\"], [\"Igor Stravinsky\"], [\"Colin Davis\"], [\"Michael Tilson Thomas\"], [\"Paul Jorgensen\"], [\"Antal Brown\"], [\"Charles Dutoit\"], [\"Seiji Ozawa\"], [\"Valeri Gergiev\"], [\"Pierre Boulez\"], [\"Gerard Schwarz\"], [\"Robert Craft\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_36", "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"", "execution_result": "[[11]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_37", "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "execution_result": "[[\"Columbia Masterworks\"], [\"Philips\"], [\"Philips Classics Records\"], [\"RCA\"], [\"EMI\"], [\"Koch Records / Naxos Records\"], [\"Decca Records\"], [\"Mercury Records\"], [\"Deutsche Grammophon\"], [\"Kultur\"], [\"Decca Records\"], [\"Delos Records\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_38", "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID", "execution_result": "[[\"Antal Dor\\u00e1ti\", \"London Symphony Orchestra\"], [\"Igor Stravinsky\", \"Columbia Symphony Orchestra\"], [\"Colin Davis\", \"Royal Concertgebouw Orchestra\"], [\"Paul Jorgensen\", \"Royal Danish Orchestra\"], [\"Antal Brown\", \"Detroit Symphony Orchestra\"], [\"Charles Dutoit\", \"Montreal Symphony Orchestra\"], [\"Gerard Schwarz\", \"Seattle Symphony Orchestra\"], [\"Pierre Boulez\", \"Chicago Symphony Orchestra\"], [\"Valeri Gergiev\", \"Kirov Orchestra\"], [\"Robert Craft\", \"Philharmonia Orchestra\"], [\"Seiji Ozawa\", \"Orchestre de Paris\"], [\"Michael Tilson Thomas\", \"San Francisco Symphony Orchestra\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan", "alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "orchestra_39", "question": "What are the record companies of orchestras in descending order of years in which they were founded?", "db_id": "orchestra", "table_names": ["conductor", "orchestra", "performance", "show"], "gold_sql_query": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC", "execution_result": "[[\"Columbia Masterworks\"], [\"Philips\"], [\"Philips Classics Records\"], [\"RCA\"], [\"EMI\"], [\"Koch Records / Naxos Records\"], [\"Decca Records\"], [\"Mercury Records\"], [\"Deutsche Grammophon\"], [\"Kultur\"], [\"Decca Records\"], [\"Delos Records\"]]", "tenant_id": "tenant_data_v2/orchestra", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_0", "question": "Show the number of high schoolers for each grade.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "execution_result": "[[9, 4], [10, 4], [11, 4], [12, 4]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_1", "question": "What is the name of the high schooler who has the greatest number of friends?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"Andrew\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_2", "question": "What are the names and grades for each high schooler?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT name ,  grade FROM Highschooler", "execution_result": "[[\"Jordan\", 9], [\"Gabriel\", 9], [\"Tiffany\", 9], [\"Cassandra\", 9], [\"Haley\", 10], [\"Andrew\", 10], [\"Kris\", 10], [\"Brittany\", 10], [\"Alexis\", 11], [\"Austin\", 11], [\"Gabriel\", 11], [\"Jessica\", 11], [\"Jordan\", 12], [\"John\", 12], [\"Kyle\", 12], [\"Logan\", 12]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_3", "question": "Show the ID of the high schooler named Kyle.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "execution_result": "[[1934]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_4", "question": "Return the names of friends of the high school student Kyle.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "execution_result": "[[\"Jordan\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_5", "question": "Count the number of high schoolers.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT count(*) FROM Highschooler", "execution_result": "[[16]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_6", "question": "Show ids of all students who do not have any friends.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "execution_result": "[[1025], [1641]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_7", "question": "How many likes correspond to each student id?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "execution_result": "[[1025, 1], [1247, 1], [1316, 1], [1501, 1], [1641, 1], [1689, 1], [1709, 1], [1782, 1], [1911, 1], [1934, 1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_8", "question": "Show all the grades of the high schoolers.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT grade FROM Highschooler", "execution_result": "[[9], [9], [9], [9], [10], [10], [10], [10], [11], [11], [11], [11], [12], [12], [12], [12]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_9", "question": "What are the names of the high schoolers and how many friends does each have?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "execution_result": "[[\"Haley\", 1], [\"Alexis\", 2], [\"Jordan\", 1], [\"Austin\", 1], [\"Tiffany\", 1], [\"Kris\", 2], [\"Jessica\", 1], [\"Jordan\", 2], [\"Logan\", 1], [\"Gabriel\", 2], [\"Cassandra\", 1], [\"Andrew\", 3], [\"Gabriel\", 1], [\"Kyle\", 1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_10", "question": "Return the number of likes that the high schooler named Kyle has.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "execution_result": "[[1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_11", "question": "What are the names of high schoolers who both have friends and are liked?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "execution_result": "[[\"Alexis\"], [\"Cassandra\"], [\"Gabriel\"], [\"Haley\"], [\"Jessica\"], [\"Jordan\"], [\"Kris\"], [\"Kyle\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_12", "question": "Show the names of all high schoolers in grade 10.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT name FROM Highschooler WHERE grade  =  10", "execution_result": "[[\"Haley\"], [\"Andrew\"], [\"Kris\"], [\"Brittany\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_13", "question": "What is the lowest grade of students who do not have any friends?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "execution_result": "[[10]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_14", "question": "What grade is Kyle in?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_15", "question": "Which grades have 4 or more high schoolers?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "execution_result": "[[9], [10], [11], [12]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_16", "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "execution_result": "[[\"Alexis\"], [\"Kris\"], [\"Jordan\"], [\"Gabriel\"], [\"Andrew\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_17", "question": "Give the name of the student with the most likes.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"John\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_18", "question": "Show names of all high school students who do not have any friends.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "execution_result": "[[\"Brittany\"], [\"John\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_19", "question": "What is the average grade of students who have friends?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "execution_result": "[[10.428571428571429]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_20", "question": "Show me all grades that have at least 4 students.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4", "execution_result": "[[9], [10], [11], [12]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_21", "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2", "execution_result": "[[\"Alexis\"], [\"Kris\"], [\"Jordan\"], [\"Gabriel\"], [\"Andrew\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_22", "question": "What are the names of high schoolers who have 3 or more friends?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "execution_result": "[[\"Andrew\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_23", "question": "What are the ids of students who both have friends and are liked?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "execution_result": "[[1101], [1247], [1304], [1468], [1501], [1689], [1709], [1934]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_24", "question": "How many likes does Kyle have?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "execution_result": "[[1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_25", "question": "Count the number of likes for each student id.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id", "execution_result": "[[1025, 1], [1247, 1], [1316, 1], [1501, 1], [1641, 1], [1689, 1], [1709, 1], [1782, 1], [1911, 1], [1934, 1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_26", "question": "Return the grade for the high schooler named Kyle.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_27", "question": "What are the names of all high schoolers in grade 10?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT name FROM Highschooler WHERE grade  =  10", "execution_result": "[[\"Haley\"], [\"Andrew\"], [\"Kris\"], [\"Brittany\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_28", "question": "Show the names and grades of each high schooler.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT name ,  grade FROM Highschooler", "execution_result": "[[\"Jordan\", 9], [\"Gabriel\", 9], [\"Tiffany\", 9], [\"Cassandra\", 9], [\"Haley\", 10], [\"Andrew\", 10], [\"Kris\", 10], [\"Brittany\", 10], [\"Alexis\", 11], [\"Austin\", 11], [\"Gabriel\", 11], [\"Jessica\", 11], [\"Jordan\", 12], [\"John\", 12], [\"Kyle\", 12], [\"Logan\", 12]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_29", "question": "Show the names of high schoolers who have likes, and numbers of likes for each.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "execution_result": "[[\"John\", 1], [\"Alexis\", 1], [\"Austin\", 1], [\"Jessica\", 1], [\"Brittany\", 1], [\"Gabriel\", 1], [\"Cassandra\", 1], [\"Andrew\", 1], [\"Gabriel\", 1], [\"Kyle\", 1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_30", "question": "Return the name of the high school student with the most friends.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"Andrew\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_31", "question": "Show the names of all of the high schooler Kyle's friends.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"", "execution_result": "[[\"Jordan\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_32", "question": "Show the ids of high schoolers who have friends and are also liked by someone else.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes", "execution_result": "[[1101], [1247], [1304], [1468], [1501], [1689], [1709], [1934]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_33", "question": "How many friends does the high school student Kyle have?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "execution_result": "[[1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_34", "question": "Show the names of students who have at least 2 likes.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "execution_result": "[]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_35", "question": "What are the names of high schoolers who have likes, and how many likes does each have?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "execution_result": "[[\"John\", 1], [\"Alexis\", 1], [\"Austin\", 1], [\"Jessica\", 1], [\"Brittany\", 1], [\"Gabriel\", 1], [\"Cassandra\", 1], [\"Andrew\", 1], [\"Gabriel\", 1], [\"Kyle\", 1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_36", "question": "Find the average grade of all students who have some friends.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "execution_result": "[[10.428571428571429]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_37", "question": "Show the names of high schoolers who have at least 3 friends.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3", "execution_result": "[[\"Andrew\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_38", "question": "How many high schoolers are in each grade?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade", "execution_result": "[[9, 4], [10, 4], [11, 4], [12, 4]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_39", "question": "What is the grade of each high schooler?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT grade FROM Highschooler", "execution_result": "[[9], [9], [9], [9], [10], [10], [10], [10], [11], [11], [11], [11], [12], [12], [12], [12]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_40", "question": "How many high schoolers are there in grade 9 or 10?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "execution_result": "[[8]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_41", "question": "What are the ids of high school students who do not have friends?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "execution_result": "[[1025], [1641]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_42", "question": "How many high schoolers are there?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT count(*) FROM Highschooler", "execution_result": "[[16]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_43", "question": "What are the names of students who have no friends?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id", "execution_result": "[[\"Brittany\"], [\"John\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_44", "question": "What are the names of students who have 2 or more likes?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2", "execution_result": "[]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_45", "question": "What is the name of the high schooler who has the greatest number of likes?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"John\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_46", "question": "Show name of all students who have some friends and also are liked by someone else.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "execution_result": "[[\"Alexis\"], [\"Cassandra\"], [\"Gabriel\"], [\"Haley\"], [\"Jessica\"], [\"Jordan\"], [\"Kris\"], [\"Kyle\"]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker", "farshid"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_47", "question": "Return the grade that has the greatest number of high schoolers.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_48", "question": "How many friends does each student have?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "execution_result": "[[1101, 1], [1247, 2], [1304, 1], [1316, 1], [1381, 1], [1468, 2], [1501, 1], [1510, 2], [1661, 1], [1689, 2], [1709, 1], [1782, 3], [1911, 1], [1934, 1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_49", "question": "Which grade has the most high schoolers?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[12]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_50", "question": "Show the names of high school students and their corresponding number of friends.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id", "execution_result": "[[\"Haley\", 1], [\"Alexis\", 2], [\"Jordan\", 1], [\"Austin\", 1], [\"Tiffany\", 1], [\"Kris\", 2], [\"Jessica\", 1], [\"Jordan\", 2], [\"Logan\", 1], [\"Gabriel\", 2], [\"Cassandra\", 1], [\"Andrew\", 3], [\"Gabriel\", 1], [\"Kyle\", 1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_51", "question": "Count the number of high schoolers in grades 9 or 10.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "execution_result": "[[8]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_52", "question": "Count the number of friends Kyle has.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "execution_result": "[[1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_53", "question": "What is Kyle's id?", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"", "execution_result": "[[1934]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_54", "question": "Show the student IDs and numbers of friends corresponding to each.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id", "execution_result": "[[1101, 1], [1247, 2], [1304, 1], [1316, 1], [1381, 1], [1468, 2], [1501, 1], [1510, 2], [1661, 1], [1689, 2], [1709, 1], [1782, 3], [1911, 1], [1934, 1]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "network_1_55", "question": "Find the minimum grade of students who have no friends.", "db_id": "network_1", "table_names": ["high schooler", "friend", "likes"], "gold_sql_query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)", "execution_result": "[[10]]", "tenant_id": "tenant_data_v2/network_1", "reference_people": ["parker"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_0", "question": "Show me the cost of the most recently performed treatment.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "execution_result": "[[407]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_1", "question": "What is the average age of the dogs who have gone through any treatments?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "execution_result": "[[5.111111111111111]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_2", "question": "How many dogs have an age below the average?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "execution_result": "[[9]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_3", "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "execution_result": "[[\"Employee\", \"6915 Oberbrunner Point Suite 491\\nGleasonville, LA \", \"West Heidi\", \"Indiana\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_4", "question": "List each owner's first name, last name, and the size of his for her dog.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "execution_result": "[[\"Jaclyn\", \"Stoltenberg\", \"LGE\"], [\"Gay\", \"Feil\", \"LGE\"], [\"Nora\", \"Haley\", \"MED\"], [\"Rachelle\", \"Funk\", \"LGE\"], [\"Emelie\", \"Mertz\", \"MED\"], [\"Johann\", \"Fisher\", \"MED\"], [\"Jaclyn\", \"Stoltenberg\", \"MED\"], [\"Rachelle\", \"Funk\", \"SML\"], [\"Melisa\", \"DuBuque\", \"MED\"], [\"Kade\", \"Rippin\", \"MED\"], [\"Cindy\", \"Schmitt\", \"LGE\"], [\"Orlando\", \"Price\", \"MED\"], [\"Rolando\", \"Prohaska\", \"SML\"], [\"Rachelle\", \"Funk\", \"MED\"], [\"Lorenz\", \"Nicolas\", \"MED\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_5", "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "execution_result": "[[\"Johann\", \"Fisher\", \"zboncak.madonna@example.net\"], [\"Cindy\", \"Schmitt\", \"wpfeffer@example.net\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_6", "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "execution_result": "[[3, \"02647\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_7", "question": "List the arrival date and the departure date for all the dogs.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT date_arrived ,  date_departed FROM Dogs", "execution_result": "[[\"2017-09-08 20:10:13\", \"2018-03-25 06:58:44\"], [\"2017-12-22 05:02:02\", \"2018-03-25 02:11:32\"], [\"2017-06-25 10:14:05\", \"2018-03-25 10:25:46\"], [\"2017-04-20 00:58:55\", \"2018-03-24 19:12:22\"], [\"2017-10-25 00:55:34\", \"2018-03-25 04:50:22\"], [\"2017-04-15 09:25:31\", \"2018-03-25 13:07:04\"], [\"2017-05-06 08:03:52\", \"2018-03-25 06:29:10\"], [\"2017-10-16 20:06:21\", \"2018-03-25 02:47:40\"], [\"2018-01-17 11:44:16\", \"2018-03-25 06:46:07\"], [\"2017-12-29 06:08:26\", \"2018-03-25 04:42:14\"], [\"2017-07-25 15:19:07\", \"2018-03-25 15:05:16\"], [\"2017-10-24 04:45:13\", \"2018-03-25 14:15:41\"], [\"2018-01-02 03:15:29\", \"2018-03-25 05:07:47\"], [\"2017-06-18 19:45:38\", \"2018-03-24 23:48:59\"], [\"2017-12-29 23:24:13\", \"2018-03-24 19:36:59\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_8", "question": "What is the average age of all the dogs?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT avg(age) FROM Dogs", "execution_result": "[[5.066666666666666]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_9", "question": "Tell me the age of the oldest dog.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT max(age) FROM Dogs", "execution_result": "[[\"9\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_10", "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "execution_result": "[[1, \"Employee\", \"deanna.schuster@example.com\"], [2, \"Employee\", \"lucile.shanahan@example.org\"], [3, \"Employee\", \"uboehm@example.org\"], [11, \"Employee\", \"west.eula@example.net\"], [12, \"Veterenarian\", \"marquardt.furman@example.org\"], [13, \"Veterenarian\", \"delphine29@example.com\"], [15, \"Employee\", \"jeichmann@example.com\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_11", "question": "Who owns the youngest dog? Give me his or her last name.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "execution_result": "[[\"Feil\"], [\"Fisher\"], [\"Rippin\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_12", "question": "Find the first names of owners living in Virginia and the names of dogs they own.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "execution_result": "[[\"Melisa\", \"Bessie\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_13", "question": "What is the age of the oldest dog?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT max(age) FROM Dogs", "execution_result": "[[\"9\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_14", "question": "Compute the average age of all the dogs.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT avg(age) FROM Dogs", "execution_result": "[[5.066666666666666]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_15", "question": "What are the email, cell phone and home phone of each professional?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "execution_result": "[[\"deanna.schuster@example.com\", \"(275)939-2435x80863\", \"+71(6)2898266914\"], [\"lucile.shanahan@example.org\", \"889-940-2676\", \"+02(1)0259033559\"], [\"uboehm@example.org\", \"(369)908-7311x065\", \"325-155-0801x7005\"], [\"lourdes.lowe@example.net\", \"00230569697\", \"312.216.3352\"], [\"mekhi.little@example.org\", \"011.193.9081x3186\", \"1-609-566-2752x25197\"], [\"jacynthe.mclaughlin@example.net\", \"139-321-7313\", \"+43(5)1132733868\"], [\"lambert62@example.org\", \"499-434-0215x1628\", \"022.529.0550x1319\"], [\"goyette.roosevelt@example.net\", \"328.842.3792\", \"891.475.2256\"], [\"schneider.kathryne@example.org\", \"962-983-8109x3509\", \"320-508-6023\"], [\"jerrod.bahringer@example.org\", \"461-801-2600\", \"(230)338-3342x585\"], [\"west.eula@example.net\", \"609-405-2990\", \"(920)304-4499x59146\"], [\"marquardt.furman@example.org\", \"1-181-670-9466\", \"246-951-0080x76716\"], [\"delphine29@example.com\", \"880-659-7577x736\", \"346.594.3739\"], [\"cole.margarita@example.org\", \"1-185-137-1945x409\", \"971.048.3763x9404\"], [\"jeichmann@example.com\", \"1-258-285-4707x8020\", \"1-138-287-3775\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_16", "question": "Find the number of professionals who have ever treated dogs.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(DISTINCT professional_id) FROM Treatments", "execution_result": "[[8]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_17", "question": "What are each professional's first name and description of the treatment they have performed?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "dog_kennels_18", "question": "List pairs of the owner's first name and the dogs's name.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "execution_result": "[[\"Jaclyn\", \"Kacey\"], [\"Gay\", \"Hipolito\"], [\"Nora\", \"Mavis\"], [\"Rachelle\", \"Houston\"], [\"Emelie\", \"Jeffrey\"], [\"Johann\", \"Merritt\"], [\"Jaclyn\", \"Narciso\"], [\"Rachelle\", \"George\"], [\"Melisa\", \"Bessie\"], [\"Kade\", \"Troy\"], [\"Cindy\", \"Betty\"], [\"Orlando\", \"Holden\"], [\"Rolando\", \"Jesus\"], [\"Rachelle\", \"Lyric\"], [\"Lorenz\", \"Evangeline\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_19", "question": "What is the description of the treatment type that costs the least money in total?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "dog_kennels_20", "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "execution_result": "[[4, \"Veterenarian\", \"Vernice\"], [6, \"Veterenarian\", \"Ruben\"], [8, \"Employee\", \"Karley\"], [9, \"Veterenarian\", \"Monte\"], [10, \"Employee\", \"Domenica\"], [14, \"Employee\", \"Sigurd\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_21", "question": "How much does the most expensive charge type costs?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT max(charge_amount) FROM Charges", "execution_result": "[[640]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["gorosti", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_22", "question": "How many dogs have not gone through any treatment?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )", "execution_result": "[[6]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_23", "question": "List the last name of the owner owning the youngest dog.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )", "execution_result": "[[\"Feil\"], [\"Fisher\"], [\"Rippin\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_24", "question": "How much does the most recent treatment cost?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1", "execution_result": "[[407]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_25", "question": "What are the first name and last name of the professionals who have done treatment with cost below average?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "execution_result": "[[\"Taryn\", \"Braun\"], [\"Jayson\", \"Ullrich\"], [\"Olaf\", \"Watsica\"], [\"Vernice\", \"Tillman\"], [\"Danny\", \"Considine\"], [\"Ruben\", \"O'Reilly\"], [\"Velva\", \"Hayes\"], [\"Karley\", \"Hyatt\"], [\"Monte\", \"Kshlerin\"], [\"Domenica\", \"Jacobs\"], [\"Brady\", \"Pouros\"], [\"Winfield\", \"Christiansen\"], [\"Ericka\", \"Murazik\"], [\"Sigurd\", \"Frami\"], [\"Lesly\", \"Walter\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_26", "question": "What are each owner's first name, last name, and the size of their dog?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "execution_result": "[[\"Jaclyn\", \"Stoltenberg\", \"LGE\"], [\"Gay\", \"Feil\", \"LGE\"], [\"Nora\", \"Haley\", \"MED\"], [\"Rachelle\", \"Funk\", \"LGE\"], [\"Emelie\", \"Mertz\", \"MED\"], [\"Johann\", \"Fisher\", \"MED\"], [\"Jaclyn\", \"Stoltenberg\", \"MED\"], [\"Rachelle\", \"Funk\", \"SML\"], [\"Melisa\", \"DuBuque\", \"MED\"], [\"Kade\", \"Rippin\", \"MED\"], [\"Cindy\", \"Schmitt\", \"LGE\"], [\"Orlando\", \"Price\", \"MED\"], [\"Rolando\", \"Prohaska\", \"SML\"], [\"Rachelle\", \"Funk\", \"MED\"], [\"Lorenz\", \"Nicolas\", \"MED\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_27", "question": "Return the owner id, first name and last name of the owner who has the most dogs.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[14, \"Rachelle\", \"Funk\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_28", "question": "List each charge type and its amount.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT charge_type ,  charge_amount FROM Charges", "execution_result": "[[\"Daily Accommodation\", 98], [\"Drugs\", 322], [\"Health Check\", 640]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["gorosti", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_29", "question": "Which breed do the most dogs have? Give me the breed name.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"Bulldog\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["alice", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_30", "question": "How much does each charge type costs? List both charge type and amount.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT charge_type ,  charge_amount FROM Charges", "execution_result": "[[\"Daily Accommodation\", 98], [\"Drugs\", 322], [\"Health Check\", 640]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["gorosti", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_31", "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "execution_result": "[[4, \"Veterenarian\", \"Vernice\"], [6, \"Veterenarian\", \"Ruben\"], [8, \"Employee\", \"Karley\"], [9, \"Veterenarian\", \"Monte\"], [10, \"Employee\", \"Domenica\"], [14, \"Employee\", \"Sigurd\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_32", "question": "How many professionals did not operate any treatment on dogs?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "execution_result": "[[7]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_33", "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[14, \"Funk\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_34", "question": "How many owners temporarily do not have any dogs?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_35", "question": "Find the first names that are used for professionals or owners but are not used as dog names.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "execution_result": "[[\"Adelle\"], [\"Brady\"], [\"Cindy\"], [\"Danny\"], [\"Domenica\"], [\"Emelie\"], [\"Ericka\"], [\"Gay\"], [\"Heather\"], [\"Jaclyn\"], [\"Jayson\"], [\"Johann\"], [\"Kade\"], [\"Karley\"], [\"Lesly\"], [\"Lorenz\"], [\"Melisa\"], [\"Monte\"], [\"Nora\"], [\"Olaf\"], [\"Orlando\"], [\"Rachelle\"], [\"Rolando\"], [\"Ruben\"], [\"Sigurd\"], [\"Taryn\"], [\"Tre\"], [\"Velva\"], [\"Vernice\"], [\"Winfield\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "juan", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_36", "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "execution_result": "[[\"uboehm@example.org\"], [\"mekhi.little@example.org\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_37", "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'", "execution_result": "[[\"Employee\", \"6915 Oberbrunner Point Suite 491\\nGleasonville, LA \", \"West Heidi\", \"Indiana\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_38", "question": "Find the arriving date and the departing date of the dogs that received a treatment.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "execution_result": "[[\"2017-06-18 19:45:38\", \"2018-03-24 23:48:59\"], [\"2017-04-20 00:58:55\", \"2018-03-24 19:12:22\"], [\"2017-12-22 05:02:02\", \"2018-03-25 02:11:32\"], [\"2017-10-24 04:45:13\", \"2018-03-25 14:15:41\"], [\"2017-12-29 06:08:26\", \"2018-03-25 04:42:14\"], [\"2017-12-29 23:24:13\", \"2018-03-24 19:36:59\"], [\"2018-01-02 03:15:29\", \"2018-03-25 05:07:47\"], [\"2017-05-06 08:03:52\", \"2018-03-25 06:29:10\"], [\"2017-09-08 20:10:13\", \"2018-03-25 06:58:44\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_39", "question": "Count the number of dogs of an age below the average.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )", "execution_result": "[[9]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_40", "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "execution_result": "[[4, \"00230569697\"], [6, \"139-321-7313\"], [8, \"328.842.3792\"], [9, \"962-983-8109x3509\"], [10, \"461-801-2600\"], [14, \"1-185-137-1945x409\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_41", "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "execution_result": "[[1, \"Braun\", \"(275)939-2435x80863\"], [8, \"Hyatt\", \"328.842.3792\"], [9, \"Kshlerin\", \"962-983-8109x3509\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_42", "question": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )", "execution_result": "[[\"Kacey\"], [\"Hipolito\"], [\"Mavis\"], [\"Houston\"], [\"Jeffrey\"], [\"Merritt\"], [\"Narciso\"], [\"George\"], [\"Bessie\"], [\"Betty\"], [\"Holden\"], [\"Jesus\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_43", "question": "Count the number of dogs that went through a treatment.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(DISTINCT dog_id) FROM Treatments", "execution_result": "[[9]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_44", "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "execution_result": "[[\"Kacey\", \"6\", \"7.57\"], [\"Lyric\", \"4\", \"4.36\"], [\"Evangeline\", \"1\", \"4.01\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_45", "question": "Find the average age of the dogs who went through treatments.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )", "execution_result": "[[5.111111111111111]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_46", "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id", "execution_result": "[[1, \"Employee\", \"deanna.schuster@example.com\"], [2, \"Employee\", \"lucile.shanahan@example.org\"], [3, \"Employee\", \"uboehm@example.org\"], [11, \"Employee\", \"west.eula@example.net\"], [12, \"Veterenarian\", \"marquardt.furman@example.org\"], [13, \"Veterenarian\", \"delphine29@example.com\"], [15, \"Employee\", \"jeichmann@example.com\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_47", "question": "Give me the description of the treatment type whose total cost is the lowest.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "dog_kennels_48", "question": "List the date of each treatment, together with the first name of the professional who operated it.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "execution_result": "[[\"2018-03-19 04:39:54\", \"Monte\"], [\"2018-03-15 20:25:34\", \"Domenica\"], [\"2018-03-08 05:26:23\", \"Vernice\"], [\"2018-03-01 04:14:46\", \"Karley\"], [\"2018-03-23 13:52:10\", \"Sigurd\"], [\"2018-03-11 04:23:15\", \"Vernice\"], [\"2018-03-10 11:45:58\", \"Sigurd\"], [\"2018-03-24 22:25:58\", \"Ruben\"], [\"2018-03-14 19:10:40\", \"Domenica\"], [\"2018-02-28 17:09:43\", \"Velva\"], [\"2018-03-13 12:22:58\", \"Danny\"], [\"2018-03-16 10:27:36\", \"Monte\"], [\"2018-02-26 09:08:53\", \"Karley\"], [\"2018-03-04 20:33:43\", \"Monte\"], [\"2018-03-15 19:10:02\", \"Ruben\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_49", "question": "How many professionals have performed any treatment to dogs?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(DISTINCT professional_id) FROM Treatments", "execution_result": "[[8]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_50", "question": "List the cost of each treatment and the corresponding treatment type description.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "dog_kennels_51", "question": "List the first name of all the professionals along with the description of the treatment they have done.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "dog_kennels_52", "question": "What are all the possible breed type and size type combinations?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "execution_result": "[[\"ESK\", \"LGE\"], [\"BUL\", \"LGE\"], [\"BUL\", \"MED\"], [\"HUS\", \"MED\"], [\"ESK\", \"SML\"], [\"HUS\", \"SML\"], [\"ESK\", \"MED\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_53", "question": "Which states have both owners and professionals living there?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "execution_result": "[[\"Indiana\"], [\"Mississippi\"], [\"Wisconsin\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_54", "question": "Find the number of owners who do not own any dogs at this moment.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_55", "question": "What are the cost and treatment type description of each treatment?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "dog_kennels_56", "question": "How many dogs went through any treatments?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(DISTINCT dog_id) FROM Treatments", "execution_result": "[[9]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_57", "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'", "execution_result": "[[\"Johann\", \"Fisher\", \"zboncak.madonna@example.net\"], [\"Cindy\", \"Schmitt\", \"wpfeffer@example.net\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_58", "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id", "execution_result": "[[\"2017-06-18 19:45:38\", \"2018-03-24 23:48:59\"], [\"2017-04-20 00:58:55\", \"2018-03-24 19:12:22\"], [\"2017-12-22 05:02:02\", \"2018-03-25 02:11:32\"], [\"2017-10-24 04:45:13\", \"2018-03-25 14:15:41\"], [\"2017-12-29 06:08:26\", \"2018-03-25 04:42:14\"], [\"2017-12-29 23:24:13\", \"2018-03-24 19:36:59\"], [\"2018-01-02 03:15:29\", \"2018-03-25 05:07:47\"], [\"2017-05-06 08:03:52\", \"2018-03-25 06:29:10\"], [\"2017-09-08 20:10:13\", \"2018-03-25 06:58:44\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_59", "question": "Which first names are used for professionals or owners but are not used as dog names?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs", "execution_result": "[[\"Adelle\"], [\"Brady\"], [\"Cindy\"], [\"Danny\"], [\"Domenica\"], [\"Emelie\"], [\"Ericka\"], [\"Gay\"], [\"Heather\"], [\"Jaclyn\"], [\"Jayson\"], [\"Johann\"], [\"Kade\"], [\"Karley\"], [\"Lesly\"], [\"Lorenz\"], [\"Melisa\"], [\"Monte\"], [\"Nora\"], [\"Olaf\"], [\"Orlando\"], [\"Rachelle\"], [\"Rolando\"], [\"Ruben\"], [\"Sigurd\"], [\"Taryn\"], [\"Tre\"], [\"Velva\"], [\"Vernice\"], [\"Winfield\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "juan", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_60", "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'", "execution_result": "[[\"uboehm@example.org\"], [\"mekhi.little@example.org\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_61", "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[14, \"Funk\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_62", "question": "Find the number of professionals who have not treated any dogs.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )", "execution_result": "[[7]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_63", "question": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )", "execution_result": "[[\"Kacey\"], [\"Hipolito\"], [\"Mavis\"], [\"Houston\"], [\"Jeffrey\"], [\"Merritt\"], [\"Narciso\"], [\"George\"], [\"Bessie\"], [\"Betty\"], [\"Holden\"], [\"Jesus\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_64", "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2", "execution_result": "[[1, \"Braun\", \"(275)939-2435x80863\"], [8, \"Hyatt\", \"328.842.3792\"], [9, \"Kshlerin\", \"962-983-8109x3509\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_65", "question": "Find the distinct breed type and size type combinations for dogs.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT DISTINCT breed_code ,  size_code FROM dogs", "execution_result": "[[\"ESK\", \"LGE\"], [\"BUL\", \"LGE\"], [\"BUL\", \"MED\"], [\"HUS\", \"MED\"], [\"ESK\", \"SML\"], [\"HUS\", \"SML\"], [\"ESK\", \"MED\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_66", "question": "What is the name of the breed with the most dogs?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[\"Bulldog\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["alice", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_67", "question": "Find the states where both owners and professionals live.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals", "execution_result": "[[\"Indiana\"], [\"Mississippi\"], [\"Wisconsin\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "niks"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_68", "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'", "execution_result": "[[\"Melisa\", \"Bessie\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_69", "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1", "execution_result": "[[3, \"02647\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_70", "question": "What are the arriving date and the departing date of all the dogs?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT date_arrived ,  date_departed FROM Dogs", "execution_result": "[[\"2017-09-08 20:10:13\", \"2018-03-25 06:58:44\"], [\"2017-12-22 05:02:02\", \"2018-03-25 02:11:32\"], [\"2017-06-25 10:14:05\", \"2018-03-25 10:25:46\"], [\"2017-04-20 00:58:55\", \"2018-03-24 19:12:22\"], [\"2017-10-25 00:55:34\", \"2018-03-25 04:50:22\"], [\"2017-04-15 09:25:31\", \"2018-03-25 13:07:04\"], [\"2017-05-06 08:03:52\", \"2018-03-25 06:29:10\"], [\"2017-10-16 20:06:21\", \"2018-03-25 02:47:40\"], [\"2018-01-17 11:44:16\", \"2018-03-25 06:46:07\"], [\"2017-12-29 06:08:26\", \"2018-03-25 04:42:14\"], [\"2017-07-25 15:19:07\", \"2018-03-25 15:05:16\"], [\"2017-10-24 04:45:13\", \"2018-03-25 14:15:41\"], [\"2018-01-02 03:15:29\", \"2018-03-25 05:07:47\"], [\"2017-06-18 19:45:38\", \"2018-03-24 23:48:59\"], [\"2017-12-29 23:24:13\", \"2018-03-24 19:36:59\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_71", "question": "What are the date and the operating professional's first name of each treatment?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id", "execution_result": "[[\"2018-03-19 04:39:54\", \"Monte\"], [\"2018-03-15 20:25:34\", \"Domenica\"], [\"2018-03-08 05:26:23\", \"Vernice\"], [\"2018-03-01 04:14:46\", \"Karley\"], [\"2018-03-23 13:52:10\", \"Sigurd\"], [\"2018-03-11 04:23:15\", \"Vernice\"], [\"2018-03-10 11:45:58\", \"Sigurd\"], [\"2018-03-24 22:25:58\", \"Ruben\"], [\"2018-03-14 19:10:40\", \"Domenica\"], [\"2018-02-28 17:09:43\", \"Velva\"], [\"2018-03-13 12:22:58\", \"Danny\"], [\"2018-03-16 10:27:36\", \"Monte\"], [\"2018-02-26 09:08:53\", \"Karley\"], [\"2018-03-04 20:33:43\", \"Monte\"], [\"2018-03-15 19:10:02\", \"Ruben\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_72", "question": "Which dogs are of the rarest breed? Show their names and treatment dates.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "execution_result": "[[\"Lyric\", \"2018-03-19 04:39:54\"], [\"Houston\", \"2018-03-15 20:25:34\"], [\"Lyric\", \"2018-03-08 05:26:23\"], [\"Lyric\", \"2018-03-14 19:10:40\"], [\"Kacey\", \"2018-03-15 19:10:02\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_73", "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2", "execution_result": "[[4, \"00230569697\"], [6, \"139-321-7313\"], [8, \"328.842.3792\"], [9, \"962-983-8109x3509\"], [10, \"461-801-2600\"], [14, \"1-185-137-1945x409\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_74", "question": "Which owner owns the most dogs? List the owner id, first name and last name.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1", "execution_result": "[[14, \"Rachelle\", \"Funk\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_75", "question": "List the names of the dogs of the rarest breed and the treatment dates of them.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )", "execution_result": "[[\"Lyric\", \"2018-03-19 04:39:54\"], [\"Houston\", \"2018-03-15 20:25:34\"], [\"Lyric\", \"2018-03-08 05:26:23\"], [\"Lyric\", \"2018-03-14 19:10:40\"], [\"Kacey\", \"2018-03-15 19:10:02\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["dewei", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_76", "question": "List the email, cell phone and home phone of all the professionals.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT email_address ,  cell_number ,  home_phone FROM professionals", "execution_result": "[[\"deanna.schuster@example.com\", \"(275)939-2435x80863\", \"+71(6)2898266914\"], [\"lucile.shanahan@example.org\", \"889-940-2676\", \"+02(1)0259033559\"], [\"uboehm@example.org\", \"(369)908-7311x065\", \"325-155-0801x7005\"], [\"lourdes.lowe@example.net\", \"00230569697\", \"312.216.3352\"], [\"mekhi.little@example.org\", \"011.193.9081x3186\", \"1-609-566-2752x25197\"], [\"jacynthe.mclaughlin@example.net\", \"139-321-7313\", \"+43(5)1132733868\"], [\"lambert62@example.org\", \"499-434-0215x1628\", \"022.529.0550x1319\"], [\"goyette.roosevelt@example.net\", \"328.842.3792\", \"891.475.2256\"], [\"schneider.kathryne@example.org\", \"962-983-8109x3509\", \"320-508-6023\"], [\"jerrod.bahringer@example.org\", \"461-801-2600\", \"(230)338-3342x585\"], [\"west.eula@example.net\", \"609-405-2990\", \"(920)304-4499x59146\"], [\"marquardt.furman@example.org\", \"1-181-670-9466\", \"246-951-0080x76716\"], [\"delphine29@example.com\", \"880-659-7577x736\", \"346.594.3739\"], [\"cole.margarita@example.org\", \"1-185-137-1945x409\", \"971.048.3763x9404\"], [\"jeichmann@example.com\", \"1-258-285-4707x8020\", \"1-138-287-3775\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_77", "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1", "execution_result": "[[\"Kacey\", \"6\", \"7.57\"], [\"Lyric\", \"4\", \"4.36\"], [\"Evangeline\", \"1\", \"4.01\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_78", "question": "What is the charge amount of the most expensive charge type?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT max(charge_amount) FROM Charges", "execution_result": "[[640]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["gorosti", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_79", "question": "What are each owner's first name and their dogs's name?", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id", "execution_result": "[[\"Jaclyn\", \"Kacey\"], [\"Gay\", \"Hipolito\"], [\"Nora\", \"Mavis\"], [\"Rachelle\", \"Houston\"], [\"Emelie\", \"Jeffrey\"], [\"Johann\", \"Merritt\"], [\"Jaclyn\", \"Narciso\"], [\"Rachelle\", \"George\"], [\"Melisa\", \"Bessie\"], [\"Kade\", \"Troy\"], [\"Cindy\", \"Betty\"], [\"Orlando\", \"Holden\"], [\"Rolando\", \"Jesus\"], [\"Rachelle\", \"Lyric\"], [\"Lorenz\", \"Evangeline\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["niks", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_80", "question": "Tell me the number of dogs that have not received any treatment .", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "select count(*) from dogs where dog_id not in ( select dog_id from treatments )", "execution_result": "[[6]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["valarie", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "dog_kennels_81", "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.", "db_id": "dog_kennels", "table_names": ["breeds", "charges", "sizes", "treatment types", "owners", "dogs", "professionals", "treatments"], "gold_sql_query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )", "execution_result": "[[\"Taryn\", \"Braun\"], [\"Jayson\", \"Ullrich\"], [\"Olaf\", \"Watsica\"], [\"Vernice\", \"Tillman\"], [\"Danny\", \"Considine\"], [\"Ruben\", \"O'Reilly\"], [\"Velva\", \"Hayes\"], [\"Karley\", \"Hyatt\"], [\"Monte\", \"Kshlerin\"], [\"Domenica\", \"Jacobs\"], [\"Brady\", \"Pouros\"], [\"Winfield\", \"Christiansen\"], [\"Ericka\", \"Murazik\"], [\"Sigurd\", \"Frami\"], [\"Lesly\", \"Walter\"]]", "tenant_id": "tenant_data_v2/dog_kennels", "reference_people": ["juan", "dewei"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_0", "question": "Show the names of singers that have more than one song.", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "execution_result": "[[\"Christy Walton\"], [\"Liliane Bettencourt\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice", "cassie", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_1", "question": "Show different citizenships and the maximum net worth of singers of each citizenship.", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "execution_result": "[[\"Australia\", 17.0], [\"Chile\", 17.4], [\"France\", 30.0], [\"Germany\", 14.3], [\"United States\", 28.8]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_2", "question": "Please show the most common citizenship of singers.", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "execution_result": "[[\"United States\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_3", "question": "What are the birth years and citizenships of the singers?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Birth_Year ,  Citizenship FROM singer", "execution_result": "[[1944.0, \"France\"], [1948.0, \"United States\"], [1949.0, \"United States\"], [1942.0, \"Chile\"], [1940.0, \"United States\"], [1953.0, \"Australia\"], [1962.0, \"Germany\"], [1961.0, \"United States\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_4", "question": "Show different citizenship of singers and the number of singers of each citizenship.", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "execution_result": "[[\"Australia\", 1], [\"Chile\", 1], [\"France\", 1], [\"Germany\", 1], [\"United States\", 4]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_5", "question": "List the name of singers that do not have any song.", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "execution_result": "[[\"Alice Walton\"], [\"Abigail Johnson\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice", "cassie", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_6", "question": "What are the names of the singers that have more than one songs?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "execution_result": "[[\"Christy Walton\"], [\"Liliane Bettencourt\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice", "cassie", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_7", "question": "Show the names of singers and the total sales of their songs.", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "execution_result": "[[\"Christy Walton\", 651421.0], [\"Gina Rinehart\", 292000.0], [\"Iris Fontbona\", 335000.0], [\"Jacqueline Mars\", 275000.0], [\"Liliane Bettencourt\", 1646407.0], [\"Susanne Klatten\", 261000.0]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice", "cassie", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_8", "question": "What is the name of the singer who is worth the most?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "execution_result": "[[\"Liliane Bettencourt\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_9", "question": "What is the name of the singer with the largest net worth?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "execution_result": "[[\"Liliane Bettencourt\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_10", "question": "What are the names of the singers whose birth years are either 1948 or 1949?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "execution_result": "[[\"Christy Walton\"], [\"Alice Walton\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_11", "question": "What is the most common singer citizenship ?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "select citizenship from singer group by citizenship order by count(*) desc limit 1", "execution_result": "[[\"United States\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_12", "question": "List the name of singers in ascending order of net worth.", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "execution_result": "[[\"Abigail Johnson\"], [\"Susanne Klatten\"], [\"Gina Rinehart\"], [\"Iris Fontbona\"], [\"Jacqueline Mars\"], [\"Alice Walton\"], [\"Christy Walton\"], [\"Liliane Bettencourt\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_13", "question": "How many singers are there?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT count(*) FROM singer", "execution_result": "[[8]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_14", "question": "What is the count of singers?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT count(*) FROM singer", "execution_result": "[[8]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_15", "question": "What are the song titles and singer names?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "execution_result": "[[\"Do They Know It's Christmas\", \"Liliane Bettencourt\"], [\"F**k It (I Don't Want You Back)\", \"Liliane Bettencourt\"], [\"Cha Cha Slide\", \"Christy Walton\"], [\"Call on Me\", \"Iris Fontbona\"], [\"Yeah\", \"Christy Walton\"], [\"All This Time\", \"Gina Rinehart\"], [\"Left Outside Alone\", \"Jacqueline Mars\"], [\"Mysterious Girl\", \"Susanne Klatten\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice", "cassie", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_16", "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "execution_result": "[[\"United States\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_17", "question": "What are the birth year and citizenship of singers?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Birth_Year ,  Citizenship FROM singer", "execution_result": "[[1944.0, \"France\"], [1948.0, \"United States\"], [1949.0, \"United States\"], [1942.0, \"Chile\"], [1940.0, \"United States\"], [1953.0, \"Australia\"], [1962.0, \"Germany\"], [1961.0, \"United States\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_18", "question": "What are the names of the singers who are not French citizens?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "execution_result": "[[\"Christy Walton\"], [\"Alice Walton\"], [\"Iris Fontbona\"], [\"Jacqueline Mars\"], [\"Gina Rinehart\"], [\"Susanne Klatten\"], [\"Abigail Johnson\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_19", "question": "For each citizenship, what is the maximum net worth?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship", "execution_result": "[[\"Australia\", 17.0], [\"Chile\", 17.4], [\"France\", 30.0], [\"Germany\", 14.3], [\"United States\", 28.8]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_20", "question": "What are the names of singers ordered by ascending net worth?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "execution_result": "[[\"Abigail Johnson\"], [\"Susanne Klatten\"], [\"Gina Rinehart\"], [\"Iris Fontbona\"], [\"Jacqueline Mars\"], [\"Alice Walton\"], [\"Christy Walton\"], [\"Liliane Bettencourt\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_21", "question": "For each citizenship, how many singers are from that country?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship", "execution_result": "[[\"Australia\", 1], [\"Chile\", 1], [\"France\", 1], [\"Germany\", 1], [\"United States\", 4]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_22", "question": "List the name of singers whose citizenship is not \"France\".", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "execution_result": "[[\"Christy Walton\"], [\"Alice Walton\"], [\"Iris Fontbona\"], [\"Jacqueline Mars\"], [\"Gina Rinehart\"], [\"Susanne Klatten\"], [\"Abigail Johnson\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_23", "question": "what are the different names of the singers that have sales more than 300000?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "execution_result": "[[\"Liliane Bettencourt\"], [\"Christy Walton\"], [\"Iris Fontbona\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice", "cassie", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_24", "question": "Show titles of songs and names of singers.", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID", "execution_result": "[[\"Do They Know It's Christmas\", \"Liliane Bettencourt\"], [\"F**k It (I Don't Want You Back)\", \"Liliane Bettencourt\"], [\"Cha Cha Slide\", \"Christy Walton\"], [\"Call on Me\", \"Iris Fontbona\"], [\"Yeah\", \"Christy Walton\"], [\"All This Time\", \"Gina Rinehart\"], [\"Left Outside Alone\", \"Jacqueline Mars\"], [\"Mysterious Girl\", \"Susanne Klatten\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice", "cassie", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_25", "question": "Show distinct names of singers that have songs with sales more than 300000.", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000", "execution_result": "[[\"Liliane Bettencourt\"], [\"Christy Walton\"], [\"Iris Fontbona\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice", "cassie", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_26", "question": "What is the sname of every sing that does not have any song?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "execution_result": "[[\"Alice Walton\"], [\"Abigail Johnson\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice", "cassie", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_27", "question": "For each singer name, what is the total sales for their songs?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "execution_result": "[[\"Christy Walton\", 651421.0], [\"Gina Rinehart\", 292000.0], [\"Iris Fontbona\", 335000.0], [\"Jacqueline Mars\", 275000.0], [\"Liliane Bettencourt\", 1646407.0], [\"Susanne Klatten\", 261000.0]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice", "cassie", "valarie"], "datum_attributes": {"datum_requires_accessing_subtable_division": true, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_28", "question": "Show the name of singers whose birth year is either 1948 or 1949?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "execution_result": "[[\"Christy Walton\"], [\"Alice Walton\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "singer_29", "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?", "db_id": "singer", "table_names": ["singer", "song"], "gold_sql_query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "execution_result": "[[\"United States\"]]", "tenant_id": "tenant_data_v2/singer", "reference_people": ["alice"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": false}}
{"datum_id": "real_estate_properties_0", "question": "How many available features are there in total?", "db_id": "real_estate_properties", "table_names": ["reference feature types", "reference property types", "other available features", "properties", "other property features"], "gold_sql_query": "SELECT count(*) FROM Other_Available_Features", "execution_result": "[[3]]", "tenant_id": "tenant_data_v2/real_estate_properties", "reference_people": ["valarie", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "real_estate_properties_1", "question": "What is the feature type name of feature AirCon?", "db_id": "real_estate_properties", "table_names": ["reference feature types", "reference property types", "other available features", "properties", "other property features"], "gold_sql_query": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"", "execution_result": "[[\"Amenity, eg Pool.\"]]", "tenant_id": "tenant_data_v2/real_estate_properties", "reference_people": ["valarie", "cassie"], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": true, "datum_is_unanswerable": false}}
{"datum_id": "real_estate_properties_2", "question": "Show the property type descriptions of properties belonging to that code.", "db_id": "real_estate_properties", "table_names": ["reference feature types", "reference property types", "other available features", "properties", "other property features"], "gold_sql_query": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/real_estate_properties", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
{"datum_id": "real_estate_properties_3", "question": "What are the names of properties that are either houses or apartments with more than 1 room?", "db_id": "real_estate_properties", "table_names": ["reference feature types", "reference property types", "other available features", "properties", "other property features"], "gold_sql_query": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1", "execution_result": "[Unanswerable query] There isn't enough information to answer this query", "tenant_id": "tenant_data_v2/real_estate_properties", "reference_people": [], "datum_attributes": {"datum_requires_accessing_subtable_division": false, "datum_requires_redirection_handling": false, "datum_is_unanswerable": true}}
